import h5py
import json
import math
from math import floor
from PIL import Image, ImageDraw
import random
import os
import torch
import numpy as np
import pickle
import yaml
from detectron2.config import get_cfg
from detectron2.structures import Instances, Boxes, pairwise_iou, BoxMode
from detectron2.data import DatasetCatalog, MetadataCatalog
import logging
from collections import defaultdict
from torch.utils.data import Dataset, DataLoader
import copy

class VisualGenomeTrainData:
    """
    Register data for Visual Genome training
    """
    def __init__(self, cfg, split='train'):
        self.cfg = cfg
        self.split = split
        if split == 'train':
            self.mask_location = cfg.DATASETS.VISUAL_GENOME.TRAIN_MASKS
        elif split == 'val':
            self.mask_location = cfg.DATASETS.VISUAL_GENOME.VAL_MASKS
        else:
            self.mask_location = cfg.DATASETS.VISUAL_GENOME.TEST_MASKS
        self.mask_exists = os.path.isfile(self.mask_location)
        self.clamped = True if "clamped" in self.mask_location else ""
        self.per_class_dataset = cfg.DATASETS.VISUAL_GENOME.PER_CLASS_DATASET if split == 'train' else False
        self.bgnn = cfg.DATASETS.VISUAL_GENOME.BGNN if split == 'train' else False
        self.clipped = cfg.DATASETS.VISUAL_GENOME.CLIPPED
        self.precompute = False if (self.cfg.DATASETS.VISUAL_GENOME.FILTER_EMPTY_RELATIONS or self.cfg.DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP) else True
        try:
            with open('./data/datasets/images_to_remove.txt', 'r') as f:
                ids = f.readlines()
            self.ids_to_remove = {int(x.strip()) : 1 for x in ids[0].replace('[', '').replace(']','').split(",")}
        except:
            self.ids_to_remove = []
        # self._process_data()
        self.dataset_dicts = self._fetch_data_dict()
        self.register_dataset()
        try:
            statistics = self.get_statistics()
        except Exception as e:
            print(f"Error in getting statistics: {e}")
            statistics = self.get_statistics(bbox_overlap=False)
        if self.bgnn:
            freq = statistics['fg_rel_count'] / statistics['fg_rel_count'].sum() 
            freq = freq.numpy()
            oversample_param = cfg.DATASETS.VISUAL_GENOME.OVERSAMPLE_PARAM
            undersample_param = cfg.DATASETS.VISUAL_GENOME.UNDERSAMPLE_PARAM
            oversampling_ratio = np.maximum(np.sqrt((oversample_param / (freq + 1e-5))), np.ones_like(freq))[:-1]
            sampled_dataset_dicts = []
            sampled_num = []
            unique_relation_ratios = []
            unique_relations_dict = []
            for record in self.dataset_dicts:
                relations = record['relations']
                if len(relations) > 0:
                    unique_relations = np.unique(relations[:,2])
                    repeat_num = int(np.ceil(np.max(oversampling_ratio[unique_relations])))
                    for rep_idx in range(repeat_num):
                        sampled_num.append(repeat_num)
                        unique_relation_ratios.append(oversampling_ratio[unique_relations])
                        sampled_dataset_dicts.append(record)
                        unique_relations_dict.append({rel:idx for idx, rel in enumerate(unique_relations)})
                else:
                    sampled_dataset_dicts.append(record)
                    sampled_num.append(1)
                    unique_relation_ratios.append([])
                    unique_relations_dict.append({})

            self.dataset_dicts = sampled_dataset_dicts
            self.dataloader = BGNNSampler(self.dataset_dicts, sampled_num, oversampling_ratio, undersample_param, unique_relation_ratios, unique_relations_dict)
            DatasetCatalog.remove('VG_{}'.format(self.split))
            self.register_dataset(dataloader=True)
            MetadataCatalog.get('VG_{}'.format(self.split)).set(statistics=statistics) 
            print (self.idx_to_predicates, statistics['fg_rel_count'].numpy().tolist())

        if self.per_class_dataset:
            freq = statistics['fg_rel_count'] / statistics['fg_rel_count'].sum() 
            freq = freq.numpy()
            oversample_param = cfg.DATASETS.VISUAL_GENOME.OVERSAMPLE_PARAM
            undersample_param = cfg.DATASETS.VISUAL_GENOME.UNDERSAMPLE_PARAM
            oversampling_ratio = np.maximum(np.sqrt((oversample_param / (freq + 1e-5))), np.ones_like(freq))[:-1]
            unique_relation_ratios = defaultdict(list)
            unique_relations_dict = defaultdict(list)     
            per_class_dataset = defaultdict(list)
            sampled_num = defaultdict(list)
            for record in self.dataset_dicts:
                relations = record['relations']
                if len(relations) > 0:
                    unique_relations = np.unique(relations[:,2])
                    repeat_num = int(np.ceil(np.max(oversampling_ratio[unique_relations])))
                    for rel in unique_relations:
                        per_class_dataset[rel].append(record)   
                        sampled_num[rel].append(repeat_num)
                        unique_relation_ratios[rel].append(oversampling_ratio[unique_relations]) 
                        unique_relations_dict[rel].append({rel:idx for idx, rel in enumerate(unique_relations)})
            self.dataloader = ClassBalancedSampler(per_class_dataset, len(self.dataset_dicts), sampled_num, oversampling_ratio, undersample_param, unique_relation_ratios, unique_relations_dict)
            DatasetCatalog.remove('VG_{}'.format(self.split))
            self.register_dataset(dataloader=True)
            MetadataCatalog.get('VG_{}'.format(self.split)).set(statistics=statistics) 
            print (self.idx_to_predicates, statistics['fg_rel_count'].numpy().tolist())

    def register_dataset(self, dataloader=False):
        """
        Register datasets to use with Detectron2
        """
        if not dataloader:
            DatasetCatalog.register('VG_{}'.format(self.split), lambda: self.dataset_dicts)
        else:    
            DatasetCatalog.register('VG_{}'.format(self.split), lambda: self.dataloader)            
            
        #Get labels
        self.mapping_dictionary = json.load(open(self.cfg.DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY, 'r'))
        self.idx_to_classes = sorted(self.mapping_dictionary['label_to_idx'], key=lambda k: self.mapping_dictionary['label_to_idx'][k])
        self.idx_to_predicates = sorted(self.mapping_dictionary['predicate_to_idx'], key=lambda k: self.mapping_dictionary['predicate_to_idx'][k])
        self.idx_to_attributes = sorted(self.mapping_dictionary['attribute_to_idx'], key=lambda k: self.mapping_dictionary['attribute_to_idx'][k])
        MetadataCatalog.get('VG_{}'.format(self.split)).set(thing_classes=self.idx_to_classes, predicate_classes=self.idx_to_predicates, attribute_classes=self.idx_to_attributes)
    
    def _fetch_data_dict(self):
        """
        Load data in detectron format
        """
        fileName = "tmp/visual_genome_{}_data_{}{}{}{}{}{}{}{}.pkl".format(self.split, 'masks' if self.mask_exists else '', '_oi' if 'oi' in self.mask_location else '', "_clamped" if self.clamped else "", "_precomp" if self.precompute else "", "_clipped" if self.clipped else "", '_overlapfalse' if not self.cfg.DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP else "", '_emptyfalse' if not self.cfg.DATASETS.VISUAL_GENOME.FILTER_EMPTY_RELATIONS else '', "_perclass" if self.per_class_dataset else '')
        print("Loading file: ", fileName)
        if os.path.isfile(fileName):
            #If data has been processed earlier, load that to save time
            with open(fileName, 'rb') as inputFile:
                dataset_dicts = pickle.load(inputFile)
        else:
            #Process data
            os.makedirs('tmp', exist_ok=True)
            dataset_dicts = self._process_data()
            with open(fileName, 'wb') as inputFile:
                pickle.dump(dataset_dicts, inputFile)
        return dataset_dicts
            
    def _process_data(self):
        self.VG_attribute_h5 = h5py.File(self.cfg.DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5, 'r')
        
        # Remove corrupted images
        image_data = json.load(open(self.cfg.DATASETS.VISUAL_GENOME.IMAGE_DATA, 'r'))
        self.corrupted_ims = ['1592', '1722', '4616', '4617']
        self.image_data = []
        for i, img in enumerate(image_data):
            if str(img['image_id']) in self.corrupted_ims:
                continue
            self.image_data.append(img)
        # assert(len(self.image_data) == 108073)
        self.masks = None
        if self.mask_location != "":
            try:
                with open(self.mask_location, 'rb') as f:
                    self.masks = pickle.load(f)
            except:
                pass
        dataset_dicts = self._load_graphs()
        return dataset_dicts

    def get_statistics(self, eps=1e-3, bbox_overlap=True):
        num_object_classes = len(MetadataCatalog.get('VG_{}'.format(self.split)).thing_classes) + 1
        num_relation_classes = len(MetadataCatalog.get('VG_{}'.format(self.split)).predicate_classes) + 1
        
        fg_matrix = np.zeros((num_object_classes, num_object_classes, num_relation_classes), dtype=np.int64)
        bg_matrix = np.zeros((num_object_classes, num_object_classes), dtype=np.int64)
        fg_rel_count = np.zeros((num_relation_classes), dtype=np.int64)
        for idx, data in enumerate(self.dataset_dicts):
            gt_relations = data['relations']
            gt_classes = np.array([x['category_id'] for x in data['annotations']])
            gt_boxes = np.array([x['bbox'] for x in data['annotations']])
            for (o1, o2), rel in zip(gt_classes[gt_relations[:,:2]], gt_relations[:,2]):
                fg_matrix[o1, o2, rel] += 1
                fg_rel_count[rel] += 1

            for (o1, o2) in gt_classes[np.array(box_filter(gt_boxes, must_overlap=bbox_overlap), dtype=int)]:
                bg_matrix[o1, o2] += 1
        bg_matrix += 1
        fg_matrix[:, :, -1] = bg_matrix
        pred_dist = np.log(fg_matrix / fg_matrix.sum(2)[:, :, None] + eps)

        result = {
            'fg_matrix': torch.from_numpy(fg_matrix),
            'pred_dist': torch.from_numpy(pred_dist).float(),
            'fg_rel_count': torch.from_numpy(fg_rel_count).float(),
            'obj_classes': self.idx_to_classes + ['__background__'],
            'rel_classes': self.idx_to_predicates + ['__background__'],
            'att_classes': self.idx_to_attributes,
        }
        print (torch.from_numpy(fg_rel_count).float())
        MetadataCatalog.get('VG_{}'.format(self.split)).set(statistics=result)
        return result

    def _load_graphs(self):
        """
        Parse examples and create dictionaries
        """
        valid_image_ids = [1, 2, 2359297, 2326530, 2359302, 2326534, 2392074, 2326540, 2359309, 2359310, 16, 2392080, 2392083, 2326548, 22, 24, 2359323, 2326559, 2392102, 2326569, 2392106, 46, 47, 2392114, 2359350, 57, 61, 2326589, 64, 65, 2359366, 2392148, 2359380, 2326621, 102, 103, 105, 2359402, 108, 113, 2359414, 2359417, 2326649, 126, 127, 132, 2359431, 2326664, 2326668, 141, 143, 2392208, 145, 2359441, 148, 149, 2359446, 2359444, 2359450, 2392220, 2392222, 159, 161, 2392227, 2326691, 2392239, 2392248, 2392249, 2359486, 2359487, 2359490, 2359491, 2392260, 2392261, 2326726, 201, 2359499, 2326737, 2359507, 2359516, 2392287, 224, 225, 229, 2326761, 234, 236, 2359533, 240, 243, 2392308, 245, 2326774, 248, 250, 251, 2359546, 253, 2359552, 2359553, 2359555, 2359556, 262, 2326790, 270, 271, 273, 2326802, 2326804, 279, 2359575, 2359577, 282, 283, 2392346, 2359581, 2359582, 287, 2359580, 2326812, 290, 2359588, 2326821, 2392360, 2326826, 2359596, 2359598, 2392367, 308, 309, 2392373, 311, 312, 313, 2392372, 2359611, 2326841, 317, 2392386, 324, 325, 2326852, 2392391, 2326858, 2392399, 2392400, 2359633, 341, 2392413, 356, 357, 2326886, 2392424, 2392425, 364, 365, 366, 367, 368, 2392430, 2392435, 2392441, 2359676, 2326915, 2359688, 2392457, 2359690, 2359694, 2359695, 2359703, 2359706, 2359708, 2326942, 2326945, 2326948, 422, 423, 2392487, 2359720, 2359718, 2326951, 2392492, 2326962, 435, 2392503, 2392504, 445, 2326973, 2392513, 2392514, 2359745, 452, 2359752, 2326985, 2326984, 459, 460, 461, 463, 464, 2359762, 2392533, 2359765, 472, 2327002, 2327003, 476, 477, 478, 479, 480, 2359783, 2359792, 2359800, 2359801, 2359810, 2392586, 2327051, 530, 2359833, 2359840, 2392610, 2359843, 2327078, 2392621, 2392623, 2392625, 2359864, 2327105, 2327106, 579, 583, 585, 2327113, 587, 588, 2392655, 593, 2359890, 2359889, 599, 2327127, 2359897, 2327129, 603, 605, 2327133, 610, 2327138, 2392677, 624, 2392690, 629, 633, 2359935, 2359942, 2359950, 659, 661, 2327189, 2327204, 677, 2359974, 2359985, 699, 700, 701, 702, 703, 2359999, 2327236, 2360007, 712, 713, 717, 2360016, 721, 2392798, 735, 2360031, 737, 2360030, 2392805, 2360037, 744, 2360041, 746, 748, 2360051, 761, 2392826, 763, 765, 766, 2392830, 768, 2327297, 771, 772, 2360067, 2360070, 2327300, 2327299, 779, 784, 787, 788, 789, 790, 801, 802, 807, 809, 2327340, 2360110, 816, 2327345, 2360116, 821, 823, 824, 2360121, 827, 829, 2360125, 832, 833, 834, 836, 837, 2360133, 839, 2327368, 2360138, 2360143, 2360144, 850, 2360148, 857, 858, 2360155, 860, 2360153, 863, 864, 2392928, 2392932, 869, 2360164, 871, 873, 874, 875, 876, 2360172, 2360174, 2360171, 2360191, 2392967, 2360200, 2360199, 2360203, 2327436, 2392973, 2360206, 2392974, 2327440, 913, 2360211, 2327445, 2327446, 923, 2327454, 928, 2360225, 2360227, 2327464, 2393004, 2360236, 2327470, 943, 2393008, 2360239, 2327473, 2360247, 2360251, 2360255, 2327490, 964, 2360263, 2393033, 970, 2360270, 2327503, 978, 2327507, 2393046, 2393048, 2393049, 2360283, 2327516, 2327515, 2393064, 2360301, 2360308, 2327544, 2360324, 2393095, 2360329, 2327570, 2393108, 2360343, 2327582, 2327591, 2360362, 2393132, 2327611, 2393148, 2393149, 2360383, 2393160, 2393176, 1124, 2360424, 2327656, 2327658, 2327668, 2327669, 2360438, 2360441, 2360443, 2360444, 2327675, 2327687, 2327688, 2360464, 2360466, 2360467, 2393238, 2360470, 2327703, 2393242, 2393243, 2360475, 2327708, 2360483, 2393257, 2393275, 2393286, 2360519, 2360521, 2393294, 2360541, 2393317, 1258, 2360554, 2327792, 2327798, 2327799, 2360580, 1287, 2360587, 2360589, 2360592, 2393364, 2360599, 2360604, 2393373, 2360607, 2327843, 2360617, 2360618, 1324, 2360625, 2360642, 2360649, 2327884, 2327889, 2360658, 2327911, 2327914, 2360684, 1403, 1404, 1405, 2393472, 2360704, 2360706, 1413, 1414, 2393481, 1422, 1423, 1424, 2393488, 2327953, 1427, 1428, 1431, 1438, 2327966, 1441, 1443, 1444, 1446, 2360743, 2393513, 1454, 1466, 2327995, 1468, 1478, 1479, 1480, 2393543, 2360782, 1487, 1492, 2328022, 1498, 1500, 1501, 1506, 2328037, 1513, 2360811, 2360816, 2360822, 2328054, 1531, 1539, 1540, 2360852, 2360854, 2360863, 2393634, 2360867, 2360868, 2393639, 1579, 2328107, 2360877, 1582, 1585, 1586, 2328116, 2360889, 2360890, 2328125, 2360895, 1600, 1608, 2360906, 2360910, 1615, 1616, 2393679, 1622, 1623, 2393687, 2328153, 2360925, 2360926, 1631, 1634, 1635, 2328164, 1640, 1641, 2393706, 2393708, 2360940, 1647, 2393712, 2360947, 1651, 1654, 1655, 1656, 2328185, 1658, 1659, 2328189, 2360959, 2393751, 2328216, 2393754, 1692, 1693, 2328222, 1695, 2328223, 1697, 1705, 1706, 1711, 1716, 1718, 1719, 1720, 1725, 1730, 2393801, 2393802, 1742, 2361038, 2328272, 1750, 1753, 1754, 2328283, 1756, 2393820, 1758, 1759, 2328285, 1761, 1762, 2393827, 2328291, 2361061, 2328294, 1767, 1768, 2328297, 1770, 1771, 1772, 2361068, 1775, 2328305, 1782, 2361078, 2393851, 2361083, 2393854, 1791, 2393855, 2361089, 2361091, 2328324, 1797, 1798, 1806, 2328337, 2361109, 2328344, 1817, 1818, 2361119, 2361126, 1831, 2328360, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1846, 1847, 1848, 2393910, 1850, 1851, 2361146, 1853, 2361144, 1857, 1858, 2361155, 1859, 2361157, 2361160, 2393928, 1865, 1866, 2361161, 1869, 2361167, 2361168, 1873, 1875, 1876, 2393943, 2393951, 2393961, 2361200, 1905, 2393969, 1910, 2361207, 2361210, 1914, 1916, 2393980, 2361214, 2393983, 2361216, 2328443, 2393987, 1924, 2393994, 1934, 1935, 2361234, 2361236, 1942, 2394009, 2394010, 2361242, 2328475, 1953, 2361251, 2328483, 2361254, 2328487, 2361258, 1967, 2394036, 1975, 2394043, 2361282, 2328532, 2361304, 2361305, 2394104, 2394105, 2046, 2047, 2048, 2394119, 2328584, 2361359, 2394129, 2066, 2361362, 2328599, 2328600, 2394137, 2361377, 2086, 2087, 2328614, 2094, 2095, 2098, 2361412, 2117, 2394183, 2328654, 2328657, 2328661, 2394204, 2142, 2361438, 2361455, 2394224, 2394227, 2361466, 2394235, 2394238, 2394263, 2361498, 2203, 2361499, 2328742, 2224, 2361521, 2328752, 2227, 2231, 2232, 2236, 2241, 2242, 2243, 2244, 2245, 2361537, 2328778, 2252, 2256, 2257, 2328784, 2262, 2263, 2264, 2265, 2361562, 2361563, 2270, 2361566, 2274, 2277, 2281, 2284, 2361581, 2287, 2292, 2361591, 2361594, 2361595, 2300, 2361597, 2303, 2307, 2312, 2361609, 2314, 2315, 2361610, 2328844, 2321, 2361618, 2323, 2361621, 2361630, 2361631, 2394400, 2361632, 2341, 2347, 2348, 2361647, 2394416, 2361651, 2361652, 2361657, 2364, 2365, 2367, 2370, 2361666, 2372, 2373, 2374, 2377, 2328906, 2382, 2387, 2388, 2361683, 2395, 2399, 2410, 2361708, 2413, 2394477, 2328944, 2417, 2394482, 2328947, 2421, 2422, 2424, 2427, 2428, 2432, 2433, 2442, 2361746, 2361748, 2361752, 2361757, 2467, 2468, 2469, 2470, 2476, 2477, 2492, 2493, 2361789, 2495, 2361792, 2329032, 2329033, 2361802, 2508, 2509, 2510, 2511, 2512, 2394572, 2516, 2517, 2329044, 2524, 2526, 2527, 2528, 2529, 2394592, 2361824, 2537, 2540, 2361837, 2545, 2546, 2549, 2550, 2558, 2559, 2565, 2566, 2567, 2394630, 2329094, 2329115, 2592, 2361889, 2361890, 2595, 2329122, 2597, 2598, 2329130, 2609, 2610, 2612, 2361918, 2394687, 2361921, 2361923, 2329165, 2329167, 2361936, 2642, 2394706, 2361940, 2361944, 2670, 2672, 2394737, 2361972, 2361973, 2394746, 2329210, 2361983, 2692, 2693, 2361989, 2695, 2394759, 2699, 2329231, 2362000, 2362001, 2707, 2708, 2711, 2712, 2329239, 2715, 2716, 2717, 2718, 2362016, 2721, 2722, 2723, 2394793, 2730, 2362025, 2745, 2394810, 2750, 2752, 2394816, 2329280, 2329285, 2362056, 2761, 2762, 2362059, 2765, 2329299, 2362069, 2362071, 2777, 2362073, 2362075, 2784, 2785, 2362084, 2790, 2394854, 2799, 2802, 2362098, 2394873, 2362109, 2329345, 2819, 2821, 2826, 2828, 2829, 2835, 2329364, 2329363, 2329366, 2329375, 2848, 2329377, 2362148, 2854, 2856, 2861, 2362157, 2329391, 2864, 2875, 2876, 2329404, 2880, 2881, 2883, 2884, 2362182, 2889, 2394955, 2329428, 2329430, 2362199, 2904, 2329431, 2394975, 2394976, 2329440, 2329449, 2922, 2394994, 2934, 2935, 2936, 2937, 2394999, 2362230, 2329462, 2395025, 2329491, 2395038, 2362271, 2362273, 2989, 2992, 2993, 2329537, 2329552, 3025, 3026, 2395090, 2362321, 2395089, 2395098, 3036, 2362345, 2329577, 2329580, 2362351, 3057, 3058, 2395124, 2362356, 2329591, 3065, 2362361, 3077, 2362375, 2362379, 3090, 2362386, 3095, 3099, 3104, 2362401, 2395175, 3116, 2329644, 2395182, 3119, 3120, 2395185, 3125, 2395189, 3127, 2362421, 2362427, 2362432, 2395205, 2395208, 3147, 3149, 3153, 2362449, 3156, 2362460, 2329693, 3166, 2395231, 2395233, 2362471, 3177, 2395245, 2362479, 2329715, 2329716, 3191, 3193, 2395263, 2329727, 3202, 2362498, 2395270, 2395271, 3214, 3215, 2395279, 2362513, 3218, 2362514, 2362511, 3230, 2362526, 2395296, 2395298, 3238, 3239, 3240, 3245, 3246, 3247, 3248, 2329787, 3260, 2362556, 2395327, 3265, 3266, 3267, 3268, 3273, 3274, 2329803, 2395346, 2329811, 3284, 2362584, 3290, 3292, 3301, 3302, 3304, 3305, 3307, 2329836, 3309, 2395373, 2362607, 3314, 3315, 2362613, 3320, 3321, 3324, 3326, 2395394, 2329858, 3332, 3333, 3334, 2362629, 2329863, 3342, 3343, 3344, 2395406, 2329875, 2362644, 2329877, 2395414, 2329887, 3360, 2395425, 3362, 2329889, 2395428, 3365, 3371, 3372, 3376, 2395448, 3385, 2362696, 3402, 2362698, 2395468, 2395469, 3406, 3412, 3416, 3418, 2362716, 2395489, 2395491, 2395494, 3433, 3440, 3442, 3449, 3450, 3451, 3463, 3465, 3469, 3470, 3476, 3482, 3484, 2395550, 3490, 3495, 2362794, 2395569, 2362804, 2362807, 2362808, 3514, 3524, 2362820, 2330060, 2362829, 2395606, 2362839, 3544, 2362841, 2330072, 2362847, 2362848, 2362849, 2362862, 3570, 2330108, 3582, 2362880, 3585, 2330115, 2362886, 2362892, 3605, 2330135, 3608, 2362905, 2362908, 2395683, 2395684, 3625, 2330176, 3649, 2362946, 2395717, 2330183, 2395722, 3665, 2362962, 2362969, 3676, 2362972, 2362977, 2362979, 2395748, 2362983, 2330221, 2395759, 2362992, 2362993, 2362991, 2330225, 2330231, 2330234, 2363019, 2330251, 2395802, 2330273, 2363043, 2395820, 2395822, 2395825, 2395834, 2395836, 2363069, 2330313, 2363082, 2395851, 3794, 2395859, 2363092, 3802, 3805, 3806, 2363109, 2363111, 3819, 3820, 3821, 2395885, 2363121, 3826, 2363123, 2395902, 2395904, 2395905, 2363136, 2395908, 2363142, 2363144, 3851, 3853, 2363154, 2363163, 2395934, 2330405, 3881, 3883, 3884, 3886, 2363184, 2330419, 2395979, 2363212, 2363213, 2363215, 2363217, 2395988, 2395991, 3931, 2363234, 3939, 2396005, 2363243, 2396012, 2396016, 2396020, 2396026, 2363266, 2330509, 2330515, 2363285, 2396071, 2363306, 2330540, 2330541, 2396083, 2363321, 2396096, 2363336, 2396105, 2363338, 2396112, 2363348, 2330580, 2330582, 2396127, 2363359, 2396132, 2330602, 2363376, 2363377, 2396148, 2396158, 2363390, 2396161, 4102, 2330639, 2396179, 2363415, 4120, 2396186, 2396195, 2396205, 4153, 2363452, 2363460, 2363469, 2363470, 2330701, 4181, 2330714, 2330715, 2363484, 2396253, 2396254, 2330718, 2396257, 2330722, 2330721, 2330725, 2363495, 4202, 2396267, 2363506, 2396278, 2396281, 2396284, 2363521, 2396293, 2396300, 2330764, 2330780, 2363549, 4256, 2396327, 2396330, 2330800, 2330804, 2396342, 2363582, 2363585, 2330821, 2363597, 2363606, 4313, 2330843, 2396383, 2363616, 2396403, 4343, 2396409, 4353, 2363649, 2363651, 2330885, 2363658, 4366, 2363664, 2330899, 4373, 2363671, 2363675, 2363676, 4400, 4401, 2363698, 2396470, 2330934, 2330949, 4425, 2363724, 4429, 4430, 2363726, 2330958, 4433, 2396502, 2330967, 2396505, 2396511, 2363744, 2363743, 4450, 2363753, 2330987, 2363756, 2363757, 2330989, 2363762, 2396546, 4483, 2363788, 2396559, 2363795, 4500, 2396565, 4504, 2331032, 2396574, 2363806, 2331041, 4514, 2396580, 4518, 2331047, 2331048, 2396587, 2363819, 4532, 2363831, 2363832, 2331075, 2363845, 2331077, 2331085, 2396622, 2331091, 2396637, 2363869, 2396642, 2396643, 2363876, 2363880, 2396651, 2331117, 4590, 4594, 4600, 2331129, 4603, 2331139, 4615, 2363912, 2396687, 2363923, 2363925, 2396699, 2331164, 2331165, 2331166, 2363935, 2363936, 2363940, 2331172, 2396711, 2396712, 2363947, 2363948, 2363950, 2396719, 2396720, 2396726, 4669, 2396734, 4683, 2331214, 2363989, 2331237, 2396795, 2364031, 2364034, 2364037, 2364038, 4744, 2364045, 2396814, 2331281, 2364051, 2331297, 2396834, 2396837, 2364073, 2396849, 2331317, 2331321, 2331332, 2364109, 2364111, 2396880, 2364114, 2331359, 2331360, 2396907, 2364140, 2364141, 2364139, 2364148, 2364157, 2364161, 2396937, 2364175, 2364180, 2364192, 2331425, 2396962, 2364195, 2331433, 2331438, 2396979, 2331443, 2396990, 2364222, 2364235, 4940, 2331481, 2397031, 2364263, 2397035, 2397040, 2364274, 4979, 2397045, 4983, 2331513, 4989, 2397053, 2397057, 2364293, 4998, 2364299, 2331534, 2364304, 2331542, 2364319, 2397089, 2364325, 2397094, 2364328, 2331563, 2331570, 2364345, 2364347, 2364348, 2364350, 2364352, 2397124, 2397125, 2364356, 2331591, 2397129, 2364366, 2364367, 2397137, 2331603, 2364377, 2331609, 2397148, 2364398, 2331631, 2331630, 2331637, 2397175, 2331640, 2364410, 2364427, 2364428, 2331668, 2364440, 2364451, 2331683, 2397224, 2364460, 2364462, 2331697, 2397234, 2397240, 2364483, 2331724, 2397270, 2364508, 2364518, 2364520, 2331768, 2364545, 2364552, 2364580, 2364584, 2364595, 2364603, 2397382, 2364619, 2397398, 2397400, 2364632, 2397412, 2397418, 2331885, 2331895, 2397440, 2397450, 2364686, 2364691, 2397472, 2397483, 2331949, 2364719, 2397488, 2397502, 2397511, 2397521, 2364761, 2331997, 2397548, 2397553, 2332020, 2397559, 2364799, 2332036, 2332039, 2364823, 2332055, 2364825, 2332063, 2397602, 2364837, 2397609, 2332078, 2397615, 2332092, 2397634, 2364869, 2397644, 2364881, 2364890, 2364901, 2364908, 2397683, 2364939, 2364940, 2364941, 2364943, 2332179, 2397732, 2397734, 2332199, 2397736, 2364970, 2332206, 2397745, 2364983, 2397753, 2397755, 2364991, 2332236, 2365005, 2332248, 2397789, 2365021, 2365027, 2332260, 2365038, 2332276, 2365056, 2397825, 2365059, 2397830, 2365066, 2365075, 2365078, 2365084, 2397856, 2397867, 2365104, 2365111, 2397880, 2397884, 2365118, 2332355, 2332358, 2365134, 2332366, 2365143, 2397915, 2332383, 2365158, 2332392, 2332400, 2397947, 2397951, 2365192, 2332434, 2397983, 2365216, 2365217, 2365218, 2332452, 2332453, 2365222, 2365223, 2332463, 2365235, 2365243, 2398019, 2332484, 2398024, 2365256, 2398028, 2365260, 2398030, 2332495, 2398036, 2365270, 2365275, 2332512, 2365298, 2365299, 2365303, 2365312, 2398081, 2332554, 2398095, 2365331, 2365335, 2365337, 2332569, 2365356, 2365371, 2398143, 2365375, 2365378, 2365391, 2365394, 2365404, 2398174, 2365410, 2398182, 2398183, 2365416, 2365414, 2365422, 2398193, 2332668, 2365437, 2365439, 2365450, 2365451, 2398228, 2332692, 2332697, 2398241, 2332705, 2398245, 2332717, 2365490, 2398259, 2398261, 2365495, 2332731, 2398273, 2398282, 2332754, 2398294, 2365534, 2365540, 2332772, 2398320, 2365556, 2332788, 2365560, 2365567, 2398336, 2398344, 2365577, 2398349, 2365581, 2398357, 2398360, 2365593, 2332844, 2365618, 2365623, 2365629, 2365646, 2398420, 2398422, 2398426, 2365659, 2398429, 2332897, 2365668, 2365673, 2332910, 2398448, 2365680, 2332914, 2365683, 2332916, 497920, 2398466, 2365706, 2365713, 2332947, 2332958, 2365727, 497972, 497974, 2398518, 497979, 2365756, 2365776, 498005, 2365781, 498010, 498011, 2365787, 498020, 2398567, 2398568, 2365799, 2333035, 498028, 2333036, 498031, 498035, 2333048, 2365818, 2333055, 498053, 2365833, 2365838, 2398615, 498078, 2333089, 498083, 2333097, 2365868, 2333100, 2333130, 498123, 2333132, 2365912, 2365920, 2365928, 2398698, 2365934, 2365938, 2333176, 2365946, 2365949, 498182, 2398733, 2398734, 2398741, 2398743, 2398744, 498202, 498205, 2365985, 2398754, 498212, 2365988, 2366001, 2366007, 2398779, 2366012, 2333245, 2398783, 2398785, 2398789, 2366025, 498250, 498254, 2398799, 2398803, 2366036, 498266, 2398810, 2398812, 2398813, 2366043, 2366049, 2333285, 2333286, 2366058, 498283, 2333293, 2333295, 2398833, 2366068, 2333308, 2366078, 498304, 2398851, 498309, 2333318, 2333319, 2366088, 2333320, 2398858, 2333333, 2398871, 2333340, 2398879, 498346, 2366124, 2366125, 2333358, 2333362, 2366136, 498373, 2398918, 2333394, 2398933, 2398936, 2333403, 2333405, 498403, 498405, 498407, 2366193, 2398963, 2333430, 2398970, 2366202, 2398973, 2398978, 2398980, 2398982, 2366220, 2366221, 2333456, 2366233, 2366237, 2399011, 2366243, 2333481, 2366250, 2333484, 2399028, 2366263, 2366266, 2366273, 2366275, 2366280, 2399052, 2366289, 2399058, 2333528, 2366300, 2399071, 2333535, 2399074, 2366310, 2366314, 2333561, 2366330, 2399105, 2366345, 2366347, 2333579, 2366349, 2366352, 2366353, 2333584, 2366363, 2399141, 2399143, 2366381, 2366394, 2399163, 2333626, 2366399, 2366405, 2366408, 2333646, 2366417, 2399203, 2399208, 2399213, 2366457, 2399230, 2333707, 2366480, 2399251, 2366484, 2366491, 2399273, 2333746, 2333756, 2399294, 2333763, 2399301, 2366535, 2366539, 2399308, 2399326, 2366568, 2399342, 2366581, 2366584, 2333823, 2333824, 2399362, 2333832, 2333833, 2366604, 2333841, 2333847, 2366621, 2366625, 2366626, 2399402, 2333878, 2366649, 2333883, 2366652, 2399439, 2366679, 2399448, 2399450, 2366687, 2399456, 2366692, 2366698, 2399468, 2399473, 2399474, 2366705, 2366714, 2366715, 2399488, 2366732, 2333968, 2399511, 2366745, 2333981, 2333982, 2366754, 2333987, 2366757, 2366762, 2366771, 2334005, 2366793, 2366799, 2366800, 2399569, 2366802, 2366805, 2399579, 2366812, 2399586, 2366823, 2399593, 2334061, 2334063, 2399603, 2399604, 2366835, 2334067, 2366846, 2366847, 2399628, 2334093, 2399630, 2334102, 2366872, 2399644, 2366877, 2366878, 2366883, 2399652, 2366892, 2399672, 2334140, 2366911, 2399682, 2399683, 2334147, 2334149, 2366939, 2399718, 2366954, 2366962, 2366963, 2366966, 2399739, 2399740, 2334205, 2366974, 2334206, 2366976, 2399746, 2366981, 2334218, 2366995, 2367009, 2399781, 2334251, 2367021, 2334257, 2367027, 2399797, 2367038, 2399809, 2399821, 2367053, 2334291, 2334294, 2399833, 2334314, 2367086, 2399859, 2367092, 2399864, 2367096, 2367101, 2334345, 2367121, 2399903, 2334369, 2334385, 2367154, 2367160, 2334393, 2367176, 2399948, 2399952, 2367186, 2399965, 2334429, 2367206, 2367209, 2367210, 2399987, 2367222, 2367223, 2399992, 2399993, 2367225, 2367227, 2334460, 2400001, 2400003, 2367237, 2367239, 2367248, 2367250, 2367251, 2367255, 2367256, 2334492, 2400029, 2400031, 2400033, 2367265, 2400037, 2334501, 2367276, 2367277, 2400047, 2334513, 2334516, 2400054, 2334525, 2334534, 2334536, 2400074, 2400075, 2400077, 2400089, 2400090, 2334558, 2367331, 2334580, 2367355, 2367362, 2400133, 2367370, 2400149, 2367381, 2367386, 2400159, 2367395, 2367405, 2367407, 2367411, 2334644, 2367415, 2367416, 2400185, 2367428, 2334664, 2400201, 2400204, 2400205, 2400207, 2367439, 2334678, 2400218, 2367456, 2367471, 2367472, 2400249, 2400256, 2400268, 2400275, 2367518, 2367519, 2400292, 2367524, 2334765, 2367537, 2367541, 2334776, 2400314, 2400316, 2367552, 2400323, 2400330, 2367564, 2400334, 2334813, 2367582, 2400356, 2367593, 2334825, 2400370, 2400377, 2400389, 2400390, 2334857, 2367631, 2400402, 2334874, 2400415, 2367649, 2334892, 2400433, 2367667, 2334903, 2400450, 2334915, 2400452, 2400461, 2367699, 2367703, 2367705, 2334938, 2367726, 2367727, 2367729, 2367732, 2367734, 2334970, 2367742, 2367748, 2334980, 2334984, 2367754, 2367755, 2400532, 2367774, 2400545, 2335023, 2400563, 2335030, 2367799, 2367820, 2400594, 2367826, 2400598, 2400599, 2400603, 2335076, 2400614, 2400618, 2335089, 2335094, 2335095, 2326807, 2367873, 2367874, 2335114, 2367884, 2400656, 2367899, 2367901, 2335138, 2367911, 2335149, 2367929, 2400706, 2400707, 2335170, 2400713, 2367945, 2367948, 2400729, 2400733, 2335198, 2335203, 2367979, 2367983, 2335216, 2400768, 2400770, 2400789, 2335280, 2335281, 2400825, 2368084, 2335317, 2368099, 2368110, 2400891, 2400894, 2368126, 2400910, 2400917, 2335396, 2368180, 2368182, 2368186, 2335421, 2335428, 2368204, 2368207, 2400976, 2400984, 2335460, 2335481, 2368253, 2335493, 2401032, 2368272, 2368275, 2368283, 2368284, 2401058, 2401075, 2335541, 2368316, 2401091, 2368326, 2368331, 2401111, 2368352, 2401125, 2368374, 2368375, 2368378, 2368384, 2368388, 2401157, 2368390, 2335622, 2368399, 2335632, 2401170, 2401171, 2368405, 2335643, 2368430, 2368432, 2368440, 2368449, 2368457, 2368468, 2335700, 2368476, 2368495, 2368498, 2368507, 2335739, 2335742, 2401283, 2401284, 2335748, 2368518, 2401289, 2401292, 2368528, 2401306, 2401312, 2368549, 2401325, 2368561, 2401336, 2401345, 2401351, 2368583, 2401358, 2368591, 2401372, 2401382, 2401386, 2368618, 2401410, 2401412, 2335878, 2335882, 2368655, 2401424, 2368657, 2401432, 2368669, 2368670, 2335901, 2368672, 2368680, 2335912, 2335915, 2368688, 2401457, 2401461, 2368701, 2368702, 2368708, 2401484, 2401486, 2335955, 2368726, 2368733, 2401508, 2401509, 2368742, 2368741, 2335977, 2401514, 2401522, 2335987, 2401525, 2368758, 2368757, 2335993, 2335998, 2368767, 2401543, 2336017, 2401554, 2336019, 2401573, 2401580, 2368812, 2401583, 2368819, 2401588, 2401594, 2401608, 2401614, 2336084, 2368854, 2336092, 2368869, 2368877, 2401652, 2401655, 107906, 2401670, 2368903, 2336140, 2401682, 2401686, 2336150, 2336154, 2401700, 2368934, 2368935, 2401706, 107949, 107951, 107953, 2336186, 2401729, 107971, 2368967, 2368968, 2401741, 2368979, 2401751, 107997, 2401761, 2401762, 2401766, 2368998, 2369006, 2369011, 2336244, 2401789, 2369027, 2369043, 2369052, 2369054, 2336287, 2401831, 2369066, 2336314, 2336324, 2401865, 2336336, 2369112, 2336345, 2369115, 2336357, 2369127, 2401906, 2336374, 2401911, 2369146, 2401917, 2369149, 2369168, 2336414, 2401955, 2336421, 2369204, 2401973, 2401978, 2369211, 2401984, 2369218, 2369219, 2402000, 2369239, 2369248, 2369253, 2336487, 2336490, 2402032, 2369268, 2369276, 2402049, 2369282, 2369302, 2402074, 2336539, 2336545, 2402084, 2369321, 2402091, 2369326, 2402114, 2402116, 2369352, 2369359, 2402130, 2402132, 2336597, 2336598, 2369367, 2402137, 2369380, 2336618, 2369393, 2402162, 2402164, 2369397, 2369403, 2402172, 2369404, 2369406, 2402179, 2336646, 2402183, 2336650, 2402194, 2369441, 2369443, 2336678, 2402216, 2402232, 2369465, 2369464, 2369470, 2336709, 2336712, 2336717, 2369487, 2402256, 2402265, 2336736, 2402282, 2402284, 2369518, 2369525, 2402294, 2402297, 2369531, 2369535, 2336769, 2336774, 2369554, 2369561, 2336793, 2402334, 2369578, 2336813, 2336816, 2369590, 2369598, 2369612, 2369621, 2336856, 2369637, 2369638, 2336871, 2369646, 2369648, 2369653, 2402425, 2336890, 2402433, 2402435, 2402440, 2402444, 2336909, 2336911, 2402450, 2402451, 2336919, 2402471, 2369703, 2336939, 2369710, 2369717, 2336953, 2369744, 2369748, 2402531, 2369769, 2369771, 2369773, 2402542, 2369775, 2402546, 2369783, 2337028, 2337030, 2369806, 2402582, 2337050, 2337051, 2402597, 2369837, 2402607, 2337077, 2337083, 2402625, 2369857, 2337091, 2402646, 2337117, 2369888, 2402659, 2369895, 2369898, 2369901, 2337133, 2337141, 2402679, 2402680, 2369916, 2369924, 2369925, 2369932, 2369941, 2402728, 2369964, 2402734, 2369969, 2369970, 2369991, 2369999, 2370002, 2402775, 2337240, 2370009, 2337242, 2370012, 2337244, 2402785, 2402795, 2370028, 2370029, 2337260, 2402800, 2402804, 2402806, 2402815, 2370050, 2370061, 2370078, 2402847, 2337315, 2402856, 2402858, 2370091, 2337332, 2402871, 2370114, 2370115, 2337348, 2337358, 2370136, 2337371, 2402910, 2402921, 2402923, 2337387, 2402926, 2370161, 2370165, 2370166, 2337398, 2370178, 2370184, 2370185, 2402962, 2402974, 2370218, 2337453, 2370227, 2370228, 2370229, 2370230, 2337467, 2370236, 2337469, 2403009, 2370254, 2403023, 2370256, 2370257, 2337492, 2403031, 2370277, 2403046, 2337516, 2370285, 2370289, 2403058, 2337524, 2403068, 2403072, 2370309, 2403079, 2403084, 2370318, 2337551, 2370320, 2370324, 2403100, 2370332, 2337566, 2403103, 2337578, 2403115, 2370347, 2337580, 2337585, 2337592, 2337599, 2403136, 2370371, 2403145, 2370382, 2337621, 2403183, 2370418, 2403191, 2403196, 2403198, 2370430, 2370433, 2403203, 2403206, 2403208, 2403217, 2337687, 2403231, 2337695, 2337698, 2403242, 2370477, 2403246, 2337710, 2370486, 2337721, 2370491, 2370498, 2370501, 2403271, 2337741, 2370513, 2370517, 2370519, 2403288, 2370523, 2370530, 2403300, 2403304, 2337779, 2403322, 2337786, 2370570, 2403341, 2337806, 2337811, 2370581, 2370582, 2370583, 2403354, 2403363, 2403375, 2370615, 2403388, 2337852, 2370625, 2370629, 2403398, 2403404, 2403406, 2337872, 2370641, 2370642, 2337887, 2403425, 2337889, 2370659, 2337896, 2370665, 2403436, 2403437, 2337901, 2370671, 2370673, 2403470, 2337934, 2337951, 2403495, 2370729, 2370738, 2403513, 2370750, 2370761, 2370769, 2370771, 2338009, 2370778, 2338011, 2370781, 2370785, 2370788, 2370789, 2403558, 2370790, 2338031, 2403568, 2338033, 2403580, 2338044, 2370814, 2403584, 2403587, 2403591, 2370834, 2370841, 2370842, 2370846, 2403626, 2338090, 2403647, 2370880, 2338114, 2370889, 2403658, 2370897, 2370899, 2338141, 2403685, 2370922, 2370927, 2338159, 2370938, 2338170, 2403709, 2403714, 2370951, 2403721, 2370958, 2370963, 2370968, 2403737, 2338202, 2403739, 2370972, 2370973, 2403743, 2338207, 2403755, 2403759, 2371005, 2403778, 2403780, 2371024, 2371032, 2371038, 2403811, 2403829, 2403833, 2371065, 2403839, 2403840, 2403841, 2371073, 2403845, 2371077, 2371084, 2338320, 2371092, 2403866, 2338343, 2403880, 2371112, 2403883, 2338365, 2371136, 2371144, 2371145, 2371153, 2403930, 2371169, 2403941, 2403943, 2371176, 2338413, 2403950, 2371185, 2403957, 2403963, 2371203, 2371204, 2403974, 2403978, 2371211, 2371218, 2403988, 2338455, 2338459, 2371231, 2404006, 2404013, 2404018, 2338486, 2371261, 2338493, 2404033, 2371269, 2338504, 2404041, 2338507, 2371276, 2371280, 2338515, 2371286, 2404055, 2404060, 2371310, 2371314, 2371318, 2338557, 2404097, 2404100, 2404121, 2371354, 2404123, 2371358, 2404131, 2404132, 2404179, 2371419, 2404195, 2371427, 2371430, 2371441, 2404218, 2371457, 2371458, 2338701, 2404243, 2404252, 2404258, 2404259, 2371494, 2371502, 2338735, 2404293, 2371526, 2338757, 2371529, 2404312, 2404315, 2371551, 2338792, 2371567, 2404346, 2404356, 2404371, 2404387, 2404390, 2371622, 2371627, 2404398, 2371650, 2371651, 2371675, 2338909, 2404449, 2338915, 1159273, 2338924, 1159278, 2404472, 2338951, 2371732, 2404503, 2338985, 1159339, 2338988, 2371757, 2338989, 2371761, 2371764, 2371770, 2371774, 2371776, 1159361, 2404547, 1159365, 2371784, 2404558, 2404564, 2371801, 2339040, 1159403, 2371820, 2371826, 2404602, 1159427, 1159432, 2404626, 2371860, 2371871, 2339103, 2371875, 2339117, 2404656, 2371893, 2371895, 2404664, 2371896, 2404667, 1159487, 2371903, 2371906, 2371908, 1159494, 2371911, 1159498, 2371914, 2339148, 2404686, 1159510, 2371926, 2339160, 2371929, 2339161, 2371934, 2404703, 2371936, 2404705, 2371950, 2339183, 1159542, 2404729, 1159551, 2404737, 2371973, 2404743, 2404746, 2371981, 2371983, 2404753, 2371985, 1159572, 2404756, 1159580, 2371999, 2372000, 2339234, 2404777, 2372010, 2372019, 2372030, 2372031, 2372040, 1159644, 2372063, 2372066, 1159651, 2404836, 2404835, 2404841, 2339311, 1159671, 2372092, 1159683, 2372135, 2372139, 1159728, 2404916, 2404922, 2404926, 2372162, 2404931, 2404933, 1159751, 2404935, 2404940, 2404949, 2404950, 2404951, 1159774, 2404958, 2372196, 2372202, 2372203, 1159790, 2372206, 2404976, 1159798, 2339449, 2372221, 2372244, 2405014, 2372246, 2372256, 2339492, 2339496, 2372273, 2405042, 1159863, 2372283, 2405052, 2405053, 2405059, 2405061, 2339525, 2339533, 1159890, 2339539, 2405077, 1159900, 2339551, 2405090, 2372322, 2372328, 2405099, 2339565, 2372337, 2339576, 2339579, 2339581, 2372358, 2339592, 2372386, 2372392, 2339624, 2339630, 1159990, 1159991, 1159998, 2372415, 1160001, 2405193, 2372429, 1160014, 2372431, 1160021, 1160024, 2405212, 2372444, 2339676, 1160040, 2405225, 2372456, 2405233, 2339698, 2372469, 2339701, 1160060, 2372483, 2372497, 1160083, 2405273, 2339738, 1160102, 2405287, 1160106, 2339755, 2372532, 1160120, 2372538, 1160124, 1160125, 1160126, 2339778, 2339791, 1160144, 2405330, 2405337, 2372572, 2372575, 2372578, 2372579, 2339812, 2405350, 2339815, 2405352, 2372592, 1160180, 1160181, 1160182, 2405367, 2372597, 2405374, 2372610, 2372612, 2339849, 1160206, 2405391, 2372624, 2339855, 2372627, 2372628, 2372633, 1160222, 1160223, 2372644, 2372645, 1160230, 1160231, 2372646, 2372650, 2372653, 1160239, 2339890, 2372661, 1160249, 2405434, 1160257, 2372674, 2372673, 2372693, 2372696, 2372700, 2405475, 2339963, 2372734, 2339971, 2339976, 2372755, 2339987, 2339990, 2372760, 2339993, 2372762, 2339992, 2372769, 2340005, 2405542, 2405548, 2372784, 2372785, 2405556, 2405564, 2405570, 2372814, 2405583, 2372818, 2405594, 2372830, 2372833, 2405629, 2372875, 2372876, 2372878, 2372880, 2405649, 2405654, 2372889, 2340132, 2405677, 2405685, 2340151, 2372924, 2340157, 2372931, 2405700, 2340165, 2372955, 2405726, 2405734, 2340207, 2405744, 2405750, 2372986, 2372989, 2405759, 2405770, 2373003, 2340242, 2373012, 2340247, 2340248, 2373019, 2405789, 2340255, 2405809, 2340278, 2405823, 2373055, 2405834, 2340298, 2405838, 2373074, 2405844, 2373094, 2405863, 2405867, 2405873, 2373105, 2373111, 2340353, 2340359, 2340364, 2340376, 2340382, 2340388, 2373167, 2405942, 2340406, 2405945, 2340411, 2373181, 2373192, 2340429, 2340435, 2340445, 2405983, 2373217, 2340450, 2373220, 2340452, 2340469, 2373247, 2373252, 2373260, 2373262, 2406042, 2406047, 2406048, 2340515, 2373292, 2340524, 2406072, 2406076, 2406079, 2406081, 2406082, 2373314, 2340547, 2406086, 2373342, 2406132, 2340603, 2406140, 2406149, 2373384, 2340623, 2373406, 2340638, 2373410, 2340648, 2406191, 2373434, 2406205, 2373439, 2373441, 2373442, 2340680, 2406217, 2340683, 2373454, 2406232, 2340701, 2340703, 2406264, 2373496, 2340731, 2373506, 2340738, 2340748, 2373529, 2406301, 2340777, 2373546, 2373554, 2373555, 2373556, 2340787, 2373559, 2373561, 2340798, 2340800, 2373573, 2406348, 2373580, 2406350, 2340818, 2373596, 2406377, 2340846, 2373619, 2340858, 2373628, 2373634, 2406405, 2406409, 2373648, 2406420, 2373665, 2373676, 2373679, 2373682, 2406453, 2406454, 2340917, 2406461, 2373696, 2373698, 2373705, 2373710, 2406485, 2373724, 2373732, 2340965, 2340966, 2340983, 2340989, 2340990, 2341003, 2341011, 2406549, 2341016, 2373785, 2373793, 2341028, 2406568, 2373805, 2341044, 2341047, 2341052, 2341057, 2373830, 2406599, 2406610, 2373852, 2341090, 2341093, 2406638, 2373874, 2341109, 2406670, 2373903, 2373908, 2373914, 2373918, 2373922, 2341155, 2373931, 2406700, 2341165, 2341163, 2406704, 2341168, 2373938, 2341170, 2373941, 2341178, 2373947, 2406721, 2406731, 2373975, 2406744, 2406750, 2341216, 2373994, 2373995, 2373996, 2374003, 2406774, 2341250, 2374027, 2341260, 2341268, 2406808, 2374044, 2406821, 2406837, 2374078, 2374082, 2374086, 2374087, 2406856, 2341320, 2341318, 2341324, 2374096, 2341328, 2374098, 2341332, 2374101, 2406873, 2374105, 2341339, 2341341, 2374114, 2374121, 2374122, 2374124, 2341367, 2374137, 2374152, 2406924, 2406925, 2406933, 2341400, 2374169, 2374179, 2374182, 2374183, 2406953, 2374188, 2406958, 2374194, 2406967, 2374203, 2374204, 2341437, 2406978, 2341442, 2406983, 2406984, 2341447, 2341450, 2374223, 2341459, 2374230, 2406999, 2374235, 2407008, 2374243, 2341475, 2374245, 2341490, 2407027, 2374259, 2374264, 2341498, 2341501, 2374270, 2341504, 2374274, 2407050, 2407053, 2374285, 2341517, 2341539, 2407077, 2341543, 2407081, 2374313, 2407089, 2374328, 2341563, 2407100, 2407105, 2341570, 2407109, 2407110, 2374349, 2374351, 2374354, 2341586, 2341588, 2374360, 2341594, 2407132, 2341598, 2407137, 2407144, 2374376, 2341608, 2341614, 2341617, 2407155, 2374387, 2341624, 2374398, 2407185, 2407186, 2374422, 2374425, 2341667, 2374437, 2374441, 2407213, 2374448, 2341684, 2341691, 2341701, 2341702, 2374472, 2374478, 2341719, 2374488, 2341723, 2407261, 2374501, 2341736, 2341737, 2407278, 2374511, 2407282, 2341747, 2407288, 2341753, 2341759, 2341766, 2407307, 2341779, 2374550, 2341782, 2341790, 2341792, 2374567, 2407355, 2407357, 2341823, 2374599, 2374601, 2407370, 2374603, 2407377, 2374612, 2374627, 2407400, 2374632, 2407405, 2341873, 2374644, 2407413, 2374651, 2341892, 2407433, 2374670, 2341902, 2407446, 2374685, 2341920, 2407476, 2407480, 2374713, 2374726, 2407503, 2374735, 2341969, 2407509, 2407510, 2407512, 2407519, 2341988, 2374761, 2341993, 2342000, 2342001, 2342014, 2407553, 2407554, 2342019, 2342017, 2407559, 2407561, 2374794, 2342032, 2407576, 2342044, 2342053, 2374822, 2374825, 2342061, 2342074, 2407619, 2407621, 2342086, 2342085, 2374856, 2407626, 2342095, 2407634, 2407637, 2374872, 2374874, 2342107, 2342106, 2342112, 2342116, 2374886, 2342119, 2342118, 2374891, 2407661, 2407665, 2374901, 2342144, 2342146, 2407684, 2374925, 2407700, 2374935, 2407707, 2407708, 2407709, 2342172, 2342180, 2342181, 2407720, 2407722, 2407726, 2342192, 2407731, 2407732, 2407740, 2374973, 2374981, 2342213, 2407751, 2407752, 2374987, 2407776, 2407777, 2407784, 2375023, 2342265, 2342275, 2375044, 2375045, 2342278, 2375048, 2407828, 2342296, 2407834, 2407836, 2342306, 2342312, 2342313, 2407851, 2342316, 2407853, 2375085, 2375087, 2407856, 2342322, 2375091, 2407864, 2407870, 2407871, 2407874, 2342340, 2375110, 2407879, 2375111, 2342345, 2407884, 2375116, 2375122, 2407891, 2342354, 2375127, 2375130, 2375134, 2342368, 2342384, 2407922, 2342386, 2375171, 2342412, 2407960, 2375195, 2375196, 2375202, 2342434, 2342436, 2342437, 2407980, 2342446, 2375217, 2342457, 2375227, 2342459, 2342461, 2375233, 2408011, 2375245, 2408015, 2375247, 2375253, 2342491, 2342493, 2342494, 2342499, 2408039, 2375276, 2375278, 2342515, 2375289, 2342546, 2342547, 2375316, 2375319, 2408088, 2342552, 2375322, 2375326, 2408099, 2408100, 2375332, 2375331, 2375338, 2408111, 2375345, 2408116, 2375349, 2375350, 2342585, 2408125, 2375359, 2342598, 2342600, 2408137, 2408143, 2342607, 2408146, 2342616, 2342617, 2375387, 2375389, 2375398, 2408169, 2375402, 2375414, 2408188, 2342653, 2408191, 2375425, 2375432, 2408201, 2408208, 2342678, 2408217, 2342682, 2375452, 2408231, 2375464, 2342698, 2408241, 2342738, 2375509, 2408278, 2408287, 2342752, 2408289, 2375530, 2375531, 2408309, 2375544, 2342778, 2408319, 2375558, 2375559, 2408331, 2375569, 2342807, 2342809, 2375579, 2342812, 2408354, 2342823, 2342831, 2408368, 2375609, 2342854, 2408392, 2342861, 2375642, 2375643, 2375644, 2408419, 2375657, 2342894, 2408433, 2375666, 2342902, 2408439, 2342907, 2375678, 2342910, 2342915, 2375685, 2408455, 2408456, 2342931, 2342937, 2375709, 2342946, 2342947, 2375725, 2342970, 2342974, 2342985, 2342993, 2342996, 2342997, 2408539, 2408546, 2408549, 2375784, 2343021, 2375791, 2408566, 2343030, 2375800, 2375803, 2375807, 2408579, 2343045, 2408583, 2408587, 2375820, 2375824, 2375825, 2408595, 2343062, 2375835, 2408607, 2408616, 2375849, 2343080, 2343088, 2375858, 2408636, 2375869, 2408643, 2375882, 2375896, 2343131, 2343132, 2375905, 2375909, 2375910, 2343146, 2343148, 2408694, 2375934, 2343167, 2343176, 2375945, 2408716, 2408722, 2343188, 2408734, 2375968, 2375969, 2408747, 2408748, 2343220, 2343226, 2408766, 2408770, 2343240, 2408779, 2408782, 2408789, 2408791, 2343255, 2408797, 2376032, 2408802, 2408804, 2343271, 2343274, 2376046, 2343286, 2376061, 2376063, 2376071, 2343303, 2343308, 2408846, 2376080, 2376082, 2376084, 2343318, 2343321, 2408859, 2376095, 2343336, 2376105, 2376109, 2408878, 2343345, 2343347, 2408884, 2408885, 2408893, 2343358, 2343360, 2408897, 2408910, 2408911, 2408924, 2343390, 2376165, 2408935, 2376171, 2343406, 2343409, 2343414, 2376183, 2343417, 2408955, 2343423, 2343424, 2343427, 2343428, 2376198, 2343440, 2343446, 2343451, 2343452, 2408989, 2343455, 2376226, 2408995, 2376240, 2409011, 2376248, 2376249, 2376254, 2409023, 2409026, 2376258, 2376261, 2409032, 2343504, 2343514, 2343518, 2409055, 2409059, 2376292, 2376291, 2343530, 2343540, 2376311, 2343550, 2343556, 2409094, 2409100, 2376335, 2343568, 2409108, 2343581, 2409120, 2376353, 2343591, 2376361, 2343600, 2376370, 2376373, 2376378, 2376380, 2376383, 2376393, 2376395, 2376396, 2343629, 2409167, 2376403, 2409175, 2409176, 2376411, 2409185, 2376419, 2376422, 2343660, 2376432, 2343665, 2409204, 2376441, 2409216, 2409217, 2343687, 2376463, 2409237, 2376470, 2343703, 2343704, 2409241, 2343702, 2343711, 2376481, 2343714, 2343723, 2343725, 2409263, 2376495, 2409272, 2376505, 2409274, 2343736, 2409276, 2376515, 2409289, 2376523, 2343756, 2376532, 2343764, 2376537, 2343770, 2409308, 2343772, 2376543, 2376545, 2376546, 2343777, 2409318, 2376552, 2343803, 2409345, 2376585, 2343819, 2376598, 2376599, 2409374, 2343841, 2376614, 2409385, 2409400, 2343868, 2409405, 2343870, 2343871, 2409412, 2376645, 2343877, 2343881, 2409421, 2343885, 2409423, 2409425, 2343890, 2343889, 2343892, 2376661, 2376666, 2409444, 2376694, 2409466, 2409467, 2343930, 2376710, 2343946, 2409483, 2343958, 2343962, 2376738, 2409511, 2343975, 2343977, 2343982, 2409520, 2343986, 2343989, 2409526, 2343990, 2376766, 2344006, 2344011, 2376792, 2376803, 2376806, 2344038, 2376812, 2376815, 2376819, 2376820, 2344059, 2409597, 2376834, 2344069, 2376839, 2409608, 2376840, 2409610, 2344073, 2344071, 2409630, 2376869, 2409643, 2409644, 2409652, 2409656, 2344121, 2376892, 2409664, 2376902, 2409672, 2344137, 2376906, 2376907, 2376908, 2409680, 2376912, 2344146, 2344147, 2344148, 2344159, 2344161, 2409699, 2376934, 2344166, 2344172, 2344178, 2409715, 2376949, 2344184, 2409724, 2344192, 2344193, 2376967, 2376975, 2344212, 2376989, 2376998, 2377007, 2409777, 2344242, 2377017, 2409787, 2377029, 2377035, 2377036, 2377042, 2377043, 2409814, 2377046, 2409816, 2344278, 2377050, 2377051, 2344284, 2409825, 2409835, 2377071, 2377072, 2377073, 2409844, 2377079, 2344317, 2409856, 2344322, 2344332, 2409875, 2409880, 2377115, 2344348, 2377118, 2409889, 2377121, 2377132, 2409909, 2377144, 2377147, 2344380, 2377158, 2377159, 2377161, 2377162, 2377163, 2344393, 2344403, 2409941, 2344409, 2344411, 2409948, 2377187, 2344419, 2377194, 2344427, 2377196, 2409966, 2377200, 2409969, 2377206, 2377207, 2409977, 2377209, 2377215, 2344452, 2344456, 2344469, 2377239, 2410008, 2410015, 2377256, 2377258, 2344490, 2344493, 2410032, 2344500, 2377271, 2344506, 2344512, 2344516, 2344521, 2410058, 2377294, 2377303, 2410072, 2344536, 2377311, 2377323, 2377327, 2377328, 2410096, 2377333, 2410108, 2377347, 2377362, 2377363, 2410140, 2410164, 2377400, 2344633, 2344634, 2344632, 2344636, 2377412, 2410182, 2410184, 2410185, 2377418, 2410198, 2344670, 2377445, 2377447, 2377456, 2377459, 2344699, 2410242, 2410246, 2410247, 2344715, 2344718, 2344720, 2377492, 2410262, 2344728, 2344731, 2410268, 2410284, 2410288, 2344752, 2410303, 2344769, 2410306, 2377547, 2377551, 2344783, 2377558, 2377563, 2377566, 2410335, 2410340, 2344815, 2410358, 2377595, 2377605, 2377607, 2377608, 2344839, 2377620, 2377622, 2377625, 2377633, 2410405, 2410406, 2344871, 2377642, 2377644, 2344879, 2410418, 2377651, 2410425, 2410426, 2377660, 2377662, 2344902, 2344905, 2410449, 2377682, 2377681, 2377685, 2344918, 2344920, 2410460, 2377692, 2410464, 2410466, 2410469, 2377710, 2344942, 2344944, 2344954, 2410500, 2410509, 2410512, 2377748, 2344986, 2410527, 2410533, 2377771, 2345004, 2345011, 2377781, 2410551, 2345022, 2377791, 2410560, 2410565, 2377798, 2377800, 2345032, 2377805, 2410574, 2377810, 2410581, 2377813, 2410590, 2377825, 2345072, 2377850, 2345084, 2377856, 2345104, 2377880, 2345114, 2377886, 2410655, 2377887, 2345119, 2345122, 2410660, 2377897, 2410667, 2377905, 2345142, 2345158, 2377929, 2410698, 2377937, 2345171, 2345186, 2377956, 2410727, 2377960, 2345195, 2377966, 2377968, 2377971, 2345203, 2377973, 2410746, 2377985, 2377990, 2345224, 2345226, 2345228, 2410765, 2378002, 2410777, 2378012, 2378015, 2345253, 2378031, 2345268, 2378040, 2345274, 2378044, 2345285, 2410830, 2410832, 2345307, 2345312, 2378081, 2410852, 2345317, 2345316, 2378088, 2378093, 2378098, 2345341, 2378110, 2378120, 2410889, 2378122, 2378121, 2345362, 2345363, 2378142, 2345374, 2345376, 2410915, 2345384, 2410922, 2410924, 2410926, 2378159, 2378161, 2378165, 2378166, 2378170, 2410940, 2345408, 2378185, 2410965, 2410969, 1591770, 1591775, 2378209, 1591779, 2378213, 1591784, 2378216, 2378218, 2410989, 2410997, 2378231, 2411008, 1591815, 2345482, 2411020, 2411028, 2411032, 2345502, 2345504, 2411041, 2378273, 2411044, 2378276, 1591850, 2411057, 2378291, 2411060, 2378294, 2378302, 2345536, 1591881, 2411084, 2378319, 1591888, 2411092, 2378327, 2378333, 2411110, 2345579, 1591919, 1591922, 1591926, 2411127, 2411128, 2411129, 2411133, 1591935, 2345599, 2378369, 1591943, 2378375, 2345612, 2345615, 2378384, 2411154, 2378386, 1591961, 2411174, 2411175, 2345641, 2411182, 2378418, 2378420, 2411194, 2411199, 1592012, 2378445, 2345686, 2411223, 2345687, 2378457, 2378466, 2345702, 2378474, 2345707, 2345708, 2411245, 150264, 2411256, 2345727, 2345732, 2378506, 2378509, 1592079, 2411285, 150294, 2378518, 2345751, 2345761, 2378531, 2411300, 2378533, 2345766, 1592107, 2378542, 2345774, 2411312, 2411314, 1592115, 2378548, 2378551, 2345783, 2411325, 2378558, 2345789, 2411328, 2411329, 2378563, 2345796, 2345797, 2411334, 2378568, 2345804, 150360, 2345820, 2345821, 2411360, 2378593, 2378592, 150371, 2345826, 2345829, 2378603, 2411372, 150385, 2345841, 2411381, 2378617, 2345853, 2411395, 150408, 1592200, 2345869, 2411412, 2345879, 2411418, 2411419, 2345886, 1592227, 2345894, 1592231, 1592232, 1592233, 2411435, 150444, 150445, 2411438, 2411441, 2411447, 1592258, 150467, 2345923, 2411461, 150470, 2378699, 2378700, 2378701, 150478, 2411473, 2411475, 2411477, 1592278, 150487, 2411478, 2378712, 2345949, 2411486, 2345950, 2345956, 1592298, 2345966, 150514, 1592307, 150516, 2345972, 2411510, 2411506, 150520, 2411513, 2411514, 2411533, 2345998, 2346000, 2411543, 2378781, 2411549, 2411551, 2346027, 2411565, 1592376, 2378808, 2346042, 2411576, 2346045, 1592385, 2346049, 2378819, 2346059, 1592399, 2411599, 2346067, 1592406, 2411617, 2378851, 2411619, 2378854, 2346087, 2378857, 2378861, 2378868, 2411638, 2411644, 2411645, 2378883, 2411652, 2378885, 2346117, 2411651, 1592466, 2411667, 2346134, 2346141, 2346143, 2411679, 2411682, 1592485, 2346151, 2411692, 2378930, 2346162, 2411701, 2411706, 2346173, 1592511, 2346180, 2411719, 1592527, 2346192, 2378969, 2378970, 2378972, 2411741, 2346209, 2378979, 2378980, 2346213, 2411749, 2411754, 2346219, 2378989, 2378990, 2378992, 2378994, 2346228, 2411778, 2379011, 2411781, 2346248, 2379018, 2379024, 2346256, 2346261, 2379034, 2411813, 1592619, 2411821, 2346287, 2346288, 1592625, 2411823, 2346297, 2346298, 2379067, 2411838, 2379077, 2411851, 2411852, 2379088, 2346320, 2346327, 2411863, 2379102, 2411871, 2379106, 1592676, 2411878, 1592683, 1592684, 2411889, 2379124, 1592700, 1592701, 2411902, 2411900, 1592705, 1592710, 2411911, 1592728, 2379160, 2379164, 2346408, 2346412, 1592751, 2411961, 2411966, 2379201, 2379209, 1592780, 2346445, 2411984, 2379221, 1592792, 2346457, 2346460, 2412000, 1592804, 2379236, 2346469, 2379247, 2412022, 2379258, 2412027, 2412030, 2346500, 2346503, 1592847, 2346511, 2379282, 2379293, 1592863, 2346530, 1592867, 1592869, 2412069, 2412072, 1592877, 2379313, 1592885, 2412086, 1592889, 2412090, 2346555, 2412092, 2346558, 2412094, 2412098, 2346570, 2346572, 2346577, 2412116, 2412118, 2379357, 2346589, 2346598, 2412136, 2379371, 2346603, 2346605, 2379374, 1592949, 1592953, 2346618, 2346619, 2412158, 1592968, 2379405, 2379408, 2346641, 2346640, 2412177, 2379420, 2412191, 2412200, 2379440, 2379443, 2379444, 2379446, 2412217, 1593021, 1593026, 2379470, 2379472, 2412241, 2346706, 2379479, 2412248, 2346720, 2379499, 2379502, 2379504, 2346741, 2379515, 2412287, 2412288, 2412306, 2379539, 2412307, 1593109, 2379545, 2412321, 2412324, 2379557, 2412329, 1593134, 2412346, 2412347, 2346811, 1593149, 2346823, 2379592, 2379594, 2412362, 2412364, 2346830, 2412369, 1593170, 2379602, 2346841, 2379616, 1593189, 2412391, 2346864, 2412405, 2346874, 2346876, 2346881, 1593222, 1593223, 2412424, 2379666, 2379668, 2346907, 2412446, 2346911, 2412455, 2379690, 2346923, 2379692, 2412463, 2346929, 2412467, 2412471, 2379713, 2379715, 2412488, 2346958, 2412494, 2412497, 2379734, 2412504, 2412520, 2346985, 2379754, 2412523, 2346988, 2346993, 2412544, 2347014, 2412558, 2347040, 2412578, 2347043, 2379815, 2379817, 2412586, 2379818, 2379824, 2347061, 2347063, 2412602, 2412603, 2347068, 2379837, 2347074, 2412611, 2412626, 2347092, 2347093, 2412630, 2412631, 2347098, 2412642, 2347109, 2379879, 2379885, 2347117, 2412654, 2412657, 2379898, 2347137, 2379909, 2347145, 2347147, 2412683, 2379917, 2347150, 2379919, 2347151, 2412697, 2379931, 2347171, 2347183, 2347187, 2412732, 2347196, 2412734, 2347204, 2412740, 2412743, 2412745, 2347218, 2379989, 2347228, 2380010, 2347245, 2412781, 2412786, 2347252, 2412789, 2412790, 2380023, 2347256, 2412792, 2412798, 2347266, 2380039, 2380046, 2347278, 2412819, 2347291, 2380060, 2347292, 2347296, 2347297, 2347298, 2347300, 2347302, 2412838, 2347304, 2347308, 2347309, 2347312, 2347325, 2412870, 2347338, 2412876, 2380113, 2380116, 2412884, 2347360, 2347366, 2412910, 2347377, 2412921, 2412923, 2347388, 2412933, 2347405, 2380174, 2412942, 2347422, 2347423, 2380192, 2380193, 2347426, 2347428, 2380201, 2380212, 2347445, 2412989, 2412997, 2413010, 2347483, 2413019, 2380253, 2413022, 2413023, 2380257, 2413031, 2380264, 2380271, 2347505, 2347507, 2380276, 2413045, 2413050, 2380294, 2380298, 2380305, 2413085, 2347554, 2380325, 2413095, 2413098, 2413104, 2347588, 2380357, 2413130, 2413142, 2413144, 2413145, 2347610, 2347614, 2380383, 2347619, 2380389, 2347622, 2347625, 2347627, 2380399, 2347633, 2347636, 2380409, 2413187, 2380428, 2413200, 2413205, 2413206, 2347671, 2413209, 2413210, 2380443, 2347696, 2413234, 2347703, 2347709, 2413257, 2413264, 2347739, 2347761, 2347763, 2380532, 2347766, 2347767, 2380536, 2413308, 2413309, 2347774, 2413319, 2347787, 2413326, 2347792, 2347794, 2413335, 2347804, 2380574, 2347807, 2347809, 2380579, 2380580, 2380583, 2347820, 2413360, 2347836, 2347838, 2413376, 2413378, 2380621, 2413390, 2413404, 2413410, 2380644, 2347883, 2347898, 2413436, 2380676, 2347912, 2380681, 2347915, 2380686, 2380687, 2380688, 2347924, 2347929, 2380708, 2347944, 2347946, 2347957, 2347965, 2347967, 2347973, 2380745, 2380746, 2380749, 2413518, 2380759, 2380760, 2347996, 2380769, 2348001, 2348008, 2348017, 2380789, 2348028, 2348030, 2348042, 2413578, 2348051, 2413587, 2348056, 2413594, 2380829, 2348070, 2348072, 2348073, 2348074, 2380856, 2348088, 2348093, 2348102, 2380885, 2348122, 2348126, 2315358, 2380897, 2380899, 2348139, 2380908, 2315372, 2413683, 2413687, 2380923, 2413703, 2413705, 2413723, 2348193, 2413732, 2348200, 2315435, 2380975, 2380984, 2413754, 2348223, 2380992, 2348228, 2380998, 2315469, 2413789, 2381027, 2413802, 2413803, 2381037, 2381040, 2348277, 2413814, 2413816, 2413817, 2315517, 2381083, 2315547, 2381094, 2315563, 2413869, 2413871, 2413878, 2381113, 2413885, 2413893, 2381135, 2381141, 2315605, 2348379, 2413917, 2348382, 2348387, 2315620, 2315632, 2348403, 2381177, 2381184, 2413955, 2348421, 2413959, 2381193, 2315661, 2381198, 2413966, 2413965, 2413989, 2413991, 2413997, 2348466, 2348467, 2381239, 2348477, 2315721, 2414038, 2348505, 2414043, 2315744, 2348516, 2414062, 2414063, 2315764, 2414071, 2381306, 2381307, 2381308, 2315778, 2348555, 2414093, 2348562, 2348569, 2414119, 2414126, 2414132, 2348597, 2315836, 2414142, 2348608, 2414148, 2348613, 2348622, 2381391, 2348626, 2348630, 2348632, 2414174, 2348640, 2348645, 2348647, 2348649, 2348650, 2414187, 2348659, 2414196, 2315893, 2414199, 2315897, 2414204, 2381440, 2381443, 2348679, 2348686, 2348696, 2315928, 2348701, 2414246, 2381489, 2381493, 2381495, 2381500, 2348733, 2315964, 2315967, 2315968, 2315969, 2315971, 2414277, 2381510, 2348742, 2381518, 2348750, 2414295, 2381533, 2316002, 2414308, 2348781, 2381550, 2381561, 2381567, 2414339, 2381572, 2316038, 2316042, 2348813, 2381582, 2316055, 2414362, 2316059, 2414364, 2381600, 2348833, 2381604, 2381608, 2316086, 2414400, 2381641, 2316108, 2316116, 2348891, 2316129, 2414434, 2414438, 2348902, 2414464, 2414484, 2348960, 2348963, 2381732, 2348973, 2381745, 2348984, 2316217, 2414523, 2381758, 2316224, 2414534, 2316235, 2349005, 2381786, 2316251, 2414558, 2316255, 2414567, 2316268, 2349048, 2414590, 2349064, 2349065, 2316299, 2349068, 2316306, 2381854, 2349090, 2381861, 2349095, 2349098, 2316334, 2349104, 2381876, 2414645, 2381878, 2349111, 2349112, 2381881, 2414650, 2414651, 2349118, 2381888, 2349128, 2381897, 2414683, 2414684, 2349151, 2316387, 2381938, 2316404, 2316405, 2381943, 2349187, 2349188, 2349189, 2349190, 2316421, 2316427, 2316436, 2349208, 2316440, 2316449, 2349224, 2414767, 2316467, 2382004, 2316470, 2382011, 2382013, 2316478, 2349247, 2382029, 2316494, 2349264, 2414806, 2414812, 2316508, 2349283, 2382053, 2382061, 2349294, 2414839, 2316538, 2349307, 2382077, 2316549, 2382093, 2349326, 2349327, 2316561, 2382099, 2349339, 2382110, 2316582, 2316584, 2414893, 2382135, 2316602, 2316603, 2349376, 2316609, 2316620, 2382163, 2382164, 2316627, 2349398, 2414939, 2349403, 2316636, 2316642, 2316649, 2414954, 2349420, 2414958, 2349425, 2382194, 2382201, 2316670, 2382207, 2382208, 2382209, 2382210, 2316671, 2414977, 2349446, 2414986, 2349453, 2316688, 2316690, 2349463, 2349466, 2415010, 2382243, 2415018, 2316718, 2382257, 2349490, 2316727, 2382264, 2415038, 2415039, 2382273, 2349511, 2415051, 2349522, 2382312, 2316776, 2415084, 2382320, 2316785, 2316787, 2382330, 2349564, 2316803, 2382340, 2349577, 2382351, 2316821, 2349590, 2415133, 2316841, 2349611, 2316844, 2382382, 2316855, 2349635, 2415180, 2349644, 2316876, 2316879, 2415184, 2415185, 2349648, 2349652, 2349655, 2382429, 2316893, 2415199, 2316902, 2349673, 2316913, 2316914, 2382453, 2382454, 2349686, 2349689, 2316926, 2349696, 2349703, 2349706, 2349711, 2382480, 2415248, 2316950, 2316962, 2349741, 2349743, 2316975, 2415281, 2349746, 2316983, 2349752, 2316992, 2349765, 2382535, 2317004, 2415308, 2349779, 2317013, 2415320, 2349785, 2349796, 2317030, 2349800, 2349804, 2415340, 2382574, 2415351, 2415352, 2349819, 2349822, 2317054, 2415360, 2349826, 2415364, 2349831, 2317063, 2382602, 2317067, 2349839, 2317071, 2382611, 2382612, 2317078, 2317086, 2317094, 2317099, 2317105, 2349874, 2317107, 2382645, 2349879, 2317118, 2349893, 2317125, 2349905, 2349907, 2415443, 2415444, 2349915, 2382687, 2317158, 2349927, 2349928, 2317159, 2415467, 2349941, 2317174, 2317175, 2382714, 2349951, 2317183, 2317192, 2415503, 2317200, 2415506, 2349973, 2349975, 2382761, 2382764, 2415536, 2350002, 2350006, 2317239, 2382776, 2415542, 2415545, 2382779, 2350011, 2415548, 2350016, 2382785, 2382792, 2350024, 2350027, 2350028, 2317259, 2350041, 2415578, 2415579, 2317279, 2382817, 2350056, 2415593, 2382826, 2350059, 2317290, 2350061, 2317299, 2382841, 2382848, 285698, 2350083, 2350093, 2350095, 2317327, 2350097, 2317330, 2317336, 2350110, 2350118, 2382893, 2350128, 2382897, 2382903, 2350137, 2350138, 2317375, 2350144, 2317377, 2350150, 2350151, 2317389, 2350160, 2317392, 2350162, 285779, 2415701, 2350167, 2317406, 2317409, 2317413, 2415730, 2382972, 2350209, 2317441, 2415747, 2317446, 2350215, 285833, 2317449, 2415753, 2350220, 2415757, 2317455, 2382994, 2415765, 2317469, 2350247, 2350250, 2383019, 2317487, 2317489, 2350260, 2415803, 285888, 2317505, 2415809, 2415813, 2415817, 2350284, 2383054, 2350287, 2383061, 2317525, 285924, 2415844, 2317543, 2350312, 2317558, 2383105, 2317575, 2415881, 2415883, 2383117, 2350353, 2350357, 2317597, 2415911, 2350382, 2383151, 2415921, 2415922, 2383156, 2383157, 2415926, 2383163, 2350398, 2350401, 2317637, 2383179, 2383182, 2350414, 2415953, 2383186, 2317651, 2350421, 2383190, 2317656, 2383200, 2350434, 2350437, 2383209, 2350445, 2317687, 2350458, 286076, 2350461, 2350470, 2350471, 2416007, 2317712, 2317713, 2416016, 2416022, 2383256, 2350489, 2416025, 2317728, 2350501, 2350506, 2317740, 2350513, 2416057, 2350533, 2383302, 2350538, 2383310, 2416088, 2317789, 2416094, 2383327, 2350570, 2383341, 2350573, 2350578, 2317811, 2350581, 2416123, 2350588, 2416124, 2317822, 2383363, 2317828, 2416131, 2317833, 2416137, 2383375, 2416148, 2350621, 2383391, 2383394, 2383396, 2350636, 2383409, 2350642, 2350641, 2416179, 2416185, 2317883, 2383420, 2317890, 2317894, 2350668, 2317901, 2317900, 2383439, 2383440, 2317903, 2317907, 2317910, 2350690, 2416226, 2416228, 2350693, 2383463, 2383470, 2383482, 2383487, 2383489, 2416258, 2383491, 2317955, 2383494, 2383495, 2416263, 2383498, 2317966, 2317967, 2383504, 2383509, 2350742, 2317974, 2416279, 2416283, 2317981, 2317983, 2317984, 2317993, 2317996, 2383533, 2350766, 2416310, 2416312, 2318009, 2416313, 2318018, 2318022, 2383561, 2318025, 2383563, 2383577, 2383578, 2416345, 2416347, 2383601, 2350833, 2416371, 2350839, 2416382, 2350848, 2383622, 2318088, 2416394, 2350869, 2318102, 2383644, 2350877, 2350878, 2383647, 2383648, 2318108, 2318115, 2350884, 2383654, 2416423, 2350888, 2318122, 2318123, 2318124, 2416428, 2318129, 2318132, 2350917, 2383690, 2383699, 2318165, 2350934, 2318167, 2350942, 2383714, 2318180, 2383719, 2383720, 2350952, 2350951, 2383727, 2318192, 2318193, 2318197, 2318198, 2416501, 2383743, 2383748, 2416522, 2350987, 2350993, 2350995, 2350997, 2350999, 2416544, 2383778, 2351024, 2318258, 2351029, 2383801, 2351034, 2318265, 2318269, 2318278, 2351048, 2318286, 2318287, 2383829, 2318293, 2416597, 2318305, 2351089, 2383858, 2383865, 2351098, 2318332, 2351103, 2416642, 2351110, 2383880, 2318345, 2383886, 2318350, 2318354, 2383895, 2351127, 2383897, 2416664, 2318366, 2318369, 2383914, 2318382, 2318383, 2383941, 2416714, 2318420, 2318422, 2383967, 2351214, 2318446, 2351217, 2351219, 2416755, 2318463, 2384003, 2318469, 2384006, 2351238, 2318478, 2384015, 2318490, 2416795, 2318498, 2384055, 2351287, 2318526, 2318529, 2318530, 2318532, 2318538, 2318539, 2384077, 2384079, 2416848, 2384083, 2318548, 2318549, 2384087, 2318551, 2384090, 2351329, 2318566, 2351337, 2318570, 2384111, 2318577, 2384117, 2318596, 2351365, 2318599, 2318602, 2416910, 2384151, 2416923, 2318620, 2318621, 712990, 2416928, 2351394, 712999, 2384168, 2416935, 2318635, 2351405, 2384181, 2318645, 2351415, 2384187, 2351421, 2318655, 713024, 2318657, 2384196, 2318665, 2318666, 2384203, 2351435, 2318668, 2384208, 2318673, 2384210, 2416981, 2416983, 2416987, 2318700, 713070, 2384245, 2384247, 2318714, 2351484, 2351485, 2318718, 2384255, 713088, 2417022, 2417024, 2351491, 2351492, 2318726, 2318727, 2417035, 2384270, 2318735, 2417047, 2417048, 2318747, 2351516, 2351517, 2384288, 2351521, 2351520, 2417061, 2384298, 2351531, 2351530, 2417072, 2351538, 2384308, 2318774, 713146, 2351548, 2318781, 2318786, 713155, 2318788, 2351560, 2318796, 2318797, 2351566, 2351567, 2318800, 2318803, 2417107, 2318807, 2384344, 2351578, 2318811, 2417118, 713184, 2417125, 2384371, 713204, 2417146, 2318843, 2417147, 2318845, 2351616, 2318852, 2318858, 2318860, 2384398, 2417177, 2417178, 2384414, 2417185, 2351650, 713251, 2318883, 2384424, 2384427, 2384431, 2351664, 2318918, 713289, 2417225, 2351692, 2417232, 2351697, 713300, 2351701, 2318940, 2351709, 2384487, 2318952, 713323, 2417268, 2318968, 2384505, 2318974, 713348, 2351748, 2318989, 2417293, 2384534, 2351772, 2417311, 713376, 713395, 2319030, 2417334, 2351806, 2319042, 713411, 2384596, 713432, 2351832, 2417373, 2384608, 2417379, 2417385, 2351852, 2384631, 2417401, 2417407, 2384641, 713474, 2384642, 2351874, 2351877, 2319113, 2417417, 713486, 713487, 2351895, 2384664, 2384668, 713507, 2351908, 2417446, 2351914, 2384683, 2417451, 2384688, 2351920, 2384690, 2384692, 2417464, 2384698, 2319169, 713539, 713540, 2384709, 2351947, 2417485, 2351951, 2384720, 2417491, 2351957, 2351959, 2351964, 713581, 2351989, 2417525, 2417535, 2319232, 2319233, 2352003, 2319240, 713614, 2417552, 2384789, 2384799, 2384802, 2352035, 2319266, 2417572, 2319281, 2384819, 2417587, 2384821, 2417590, 713668, 713675, 2352077, 2417615, 2352081, 2319314, 2352085, 2319317, 2384855, 713694, 2352098, 2384867, 2319334, 2319336, 2352109, 2384883, 2352116, 2384885, 713720, 2352124, 2352126, 2384899, 2417667, 713734, 2352138, 713739, 2384912, 2384913, 2384915, 2417693, 2384928, 2319392, 2319395, 2319396, 2417704, 2319402, 2319403, 2384941, 2417715, 713784, 2319416, 2417722, 2319429, 713800, 2384970, 713808, 2352209, 2352213, 2352218, 2384989, 2384990, 713823, 2384993, 2319459, 2352232, 713837, 2319471, 2352242, 2352243, 2352257, 2417793, 713868, 2417809, 2352275, 2352280, 2385049, 713884, 2352287, 2385057, 713894, 2352299, 2417835, 713903, 2352304, 2352305, 2319537, 2417848, 2417856, 2319556, 2352331, 2352346, 2319579, 2417883, 2352350, 2352354, 2319586, 2385125, 2417897, 2385131, 2385133, 2352367, 2352372, 2417912, 2352381, 2319617, 2319623, 2319624, 2417927, 2385172, 2352405, 2385174, 2385178, 2385191, 2417961, 2385195, 2352433, 2385206, 2352439, 2352440, 2385211, 2385218, 2319690, 2352459, 2417997, 2352463, 2385234, 2352467, 2352487, 2319732, 2385276, 2352509, 2385286, 2352520, 2385290, 2352523, 2352522, 2352527, 2352537, 2352538, 2352540, 2319776, 2319780, 2385319, 2385320, 2319783, 2352554, 2385329, 2352564, 2385336, 2319804, 2385346, 2319812, 2319815, 2352584, 2352587, 2319823, 2319824, 2352602, 2319843, 2385380, 2319847, 2385385, 2352622, 2385392, 2352625, 2319865, 2385406, 2319872, 2385415, 2385418, 2385419, 2319888, 2385429, 2385433, 2352665, 2352668, 2385442, 2385444, 2352676, 2352681, 2385450, 2352685, 2319943, 2385481, 2352721, 2319964, 2352748, 2385520, 2352754, 2352759, 2352760, 2352766, 2352767, 2385536, 2320001, 2352772, 2352786, 2320022, 2385559, 2352796, 2352807, 2385583, 2320047, 2385585, 2385589, 2352822, 2385592, 2352828, 2320060, 2385599, 2352833, 2352839, 2320071, 2352841, 2352843, 2352845, 2352846, 2352850, 2320084, 2352862, 2352873, 2320106, 2385644, 2385645, 2385649, 2320116, 2385667, 2385688, 2352920, 2352932, 2320166, 2385703, 2385704, 2385705, 2320169, 2385708, 2352940, 2352943, 2385718, 2352951, 2320189, 2385750, 2352983, 2385752, 2352988, 2385774, 2353012, 2353013, 2353022, 2320263, 2385801, 2385802, 2353042, 2320284, 2320285, 2320289, 2320292, 2353066, 2353075, 2320314, 2320318, 2320327, 2385868, 2385870, 2353109, 2353116, 2353117, 2353123, 2353139, 2353148, 2353152, 2385928, 2320399, 2320415, 2353188, 2353195, 2353197, 2353198, 2385967, 2353205, 2385974, 2385977, 2353209, 2320446, 2353219, 2353234, 2353236, 2353248, 2386017, 2320483, 2353254, 2353266, 2320501, 2353271, 2353277, 2386048, 2386064, 2320533, 2353303, 2386075, 2353309, 2320547, 2386098, 2353331, 2353333, 2353338, 2386110, 2386114, 2353348, 2320587, 2353365, 2353366, 2386136, 2353368, 2386154, 2320636, 2353405, 2353406, 2386175, 2386179, 2386182, 2320646, 2386184, 2353421, 2353425, 2320657, 2386195, 2386210, 2386214, 2320682, 2353462, 2353464, 2353466, 2353492, 2353496, 2353506, 2320743, 2386301, 2386303, 2353535, 2353543, 2320777, 2353546, 2320781, 2353550, 2386334, 2353578, 2353582, 2320830, 2320831, 2386368, 2353614, 2320850, 2386395, 2353627, 2353638, 2353645, 2386430, 2353662, 2320903, 2386451, 2353705, 2386477, 2353715, 2386484, 2386504, 2353740, 2386512, 2353764, 2386537, 2321006, 2353775, 2353777, 2353784, 2321037, 2321041, 2353820, 2353824, 2386597, 2386604, 2353841, 2353843, 2321077, 2386615, 2321080, 2353849, 2353850, 2353852, 2353853, 2353862, 2353864, 2353871, 2353886, 2386666, 2386680, 2321147, 2386693, 2353939, 2353948, 2386723, 2353960, 2386735, 2353968, 2321207, 2353980, 2386752, 2353992, 2386762, 2353997, 2354000, 2386769, 2386771, 2386785, 2354027, 2321271, 2354055, 2386825, 2354062, 2354063, 2386832, 2386833, 2354069, 2354074, 2354082, 2386851, 2386854, 2321324, 2354095, 2386865, 2354099, 2386873, 2386876, 2321344, 2354116, 2386892, 2354129, 2354130, 2354144, 2386921, 2386922, 2386923, 2354160, 2321392, 2386931, 2354166, 2386955, 2321435, 2354212, 2386981, 2321456, 2321465, 2387002, 2354240, 2387009, 2321472, 2354244, 2387017, 2321481, 2387020, 2321491, 2354261, 2354268, 2354282, 2354286, 2387055, 2387056, 2387057, 2354290, 2354315, 2321549, 2354319, 2354325, 2354328, 2387097, 2387114, 2354356, 2387142, 2354377, 2354379, 2387148, 2354388, 2354411, 2387186, 2321657, 2387207, 2354447, 2354455, 2354456, 2354457, 2354459, 2387230, 2354465, 2354466, 2387267, 2354500, 2354501, 2354504, 2387282, 2387283, 2354518, 2387305, 2354538, 2387327, 2354563, 2354565, 2321797, 2321811, 2354582, 2354583, 2354586, 2321819, 2387358, 2354591, 2387365, 2354605, 2354619, 2354620, 2354626, 2354631, 2387400, 2387403, 2387404, 2387405, 2354635, 2354647, 2354653, 2354667, 2387437, 2321904, 2321906, 2354675, 2354680, 2387450, 2354684, 2354686, 2387456, 2387458, 2354694, 2354701, 2354702, 2321940, 2387479, 2321948, 2387490, 2387491, 2387492, 2354729, 2321975, 2354746, 2387515, 2354747, 2354749, 2354758, 2354765, 2354769, 2387542, 2354800, 2354802, 2354804, 2322054, 2387591, 2322055, 2354825, 2322060, 2322066, 2387603, 2387607, 2354840, 2322075, 2322076, 2387617, 2354852, 2322087, 2354863, 2322095, 2354865, 2322104, 2322105, 2387647, 2387649, 2322115, 2354885, 2354890, 2354891, 2354892, 2354899, 2354901, 2387671, 2322135, 2354906, 2387679, 2354918, 2354919, 2387692, 2354933, 2387702, 2322165, 2322175, 2387716, 2322181, 2387719, 2387734, 2322202, 2354977, 2322209, 2387751, 2322221, 2322231, 2322235, 2355010, 2355018, 2322264, 2355040, 2355042, 2387811, 2387817, 2355050, 2355059, 2355063, 2387833, 2322314, 2387857, 2355095, 2322331, 2387875, 2355107, 2355117, 2355119, 2322352, 2322361, 2355131, 2322375, 2322385, 2387936, 2322405, 2355175, 2387950, 2355182, 2355192, 2387965, 2322443, 2387983, 2355217, 2355221, 2355239, 2388010, 2355243, 2355248, 2322483, 2355255, 2322491, 2322494, 2322505, 2322511, 2355280, 61521, 2388054, 2355288, 2355294, 2322533, 2355305, 2388074, 2355307, 2322539, 2355311, 2355315, 2322550, 2355319, 2355320, 2322554, 61566, 61568, 2355336, 2388109, 2388110, 2355348, 2355358, 2322611, 2355381, 2322614, 2355387, 2355388, 2355395, 2388166, 2388169, 2322635, 2388173, 2388177, 2355423, 2388193, 2355430, 2388206, 2388213, 2355445, 2322678, 2355450, 2355453, 2355454, 2355467, 2322706, 2322709, 2355481, 2322714, 2355487, 2355492, 2355493, 2355501, 2355504, 2355517, 2388293, 2355526, 2322757, 2388297, 2322770, 2322776, 2355548, 2355550, 2355552, 2322794, 2388349, 2322814, 2355587, 2355589, 2355591, 2322832, 2388372, 2355619, 2388389, 2355621, 2388401, 2355637, 2388408, 2388410, 2355647, 2322888, 2388430, 2355673, 2355679, 2355691, 2322929, 2322935, 2355712, 2388482, 2355721, 2355723, 2355729, 2355733, 2355739, 2388514, 2355747, 2388531, 2388533, 2355768, 2388538, 2355789, 2355812, 2355815, 2323050, 2323058, 2355832, 2355835, 2388605, 2355853, 2388622, 2388623, 2323088, 2355859, 2355870, 2355876, 2388646, 2355878, 2388652, 2323116, 2388655, 2355892, 2323128, 2323132, 2355905, 2355908, 2355912, 2355916, 2355926, 2388704, 2388707, 2323173, 2355942, 2323175, 2355945, 2388722, 2355962, 2323194, 2323213, 2388768, 2356009, 2356020, 2356021, 2356035, 2356038, 2388810, 2356045, 2356049, 2323288, 2356071, 2356072, 2323321, 2388864, 2388865, 2356097, 2323331, 2388869, 2323335, 2356117, 2323352, 2323358, 2323359, 2388913, 2323387, 2356160, 2323396, 2356165, 2356171, 2388943, 2356178, 2388965, 2323436, 2356205, 2356206, 2356209, 2356219, 2356222, 2356228, 2356234, 2389008, 2389009, 2323475, 2323476, 2356246, 2356252, 2323495, 2323496, 2356266, 2389037, 2356269, 2323501, 2389050, 2323515, 2389053, 2356288, 2389062, 2389078, 2323545, 2389082, 2356316, 2356327, 2356347, 2389117, 2356349, 2356351, 2323583, 2389122, 2323587, 2389124, 2356362, 2356395, 2356403, 2323635, 2323644, 2323650, 2323654, 2356424, 2356430, 2323665, 2356434, 2323672, 2356450, 2356455, 2356460, 2323692, 2356468, 2356469, 2323707, 2323708, 2389252, 2389254, 2356487, 2356490, 2356494, 2356496, 2356498, 2389269, 2323738, 2356518, 2323750, 2356521, 2323767, 2389306, 2356539, 2356540, 2356543, 2356557, 2323791, 2356563, 2356581, 2323827, 2356606, 2356612, 2356621, 2323854, 2356629, 2356639, 2356650, 2356655, 2356662, 2356663, 2356664, 2356665, 2323898, 2356669, 2356670, 2356686, 2323923, 2389463, 2356698, 2356699, 2323932, 2389474, 2356710, 2389479, 2389481, 2323952, 2323959, 2356728, 2356736, 2389508, 2356741, 2356742, 2323984, 2356756, 2356763, 2389539, 2356782, 2389554, 2389559, 2356797, 2389569, 2324035, 2389579, 2389581, 2356821, 2356826, 2356828, 2389602, 2324068, 2356846, 2356848, 2356871, 2324111, 2324118, 2389657, 2389660, 2324130, 2324142, 2356921, 2356924, 2389698, 2356930, 2356932, 2356934, 2356942, 2324182, 2356960, 2356969, 2389738, 2356971, 2356970, 2356983, 2324215, 2356990, 2324226, 2324233, 2389782, 2357017, 2389793, 2324270, 2324283, 2324288, 2389827, 2389828, 2389829, 2357064, 2357072, 2324313, 2357084, 2357087, 2357097, 2357105, 2357109, 2357113, 2389882, 2357119, 2357124, 2389907, 2357141, 2357157, 2389926, 2357159, 2357165, 2389937, 2357176, 2389949, 2389950, 2389951, 2357183, 2324424, 2357197, 2389973, 2389974, 2357205, 2389979, 2357217, 2357218, 2357219, 2357226, 2357227, 2390000, 2390001, 2357235, 2390004, 2390012, 2357255, 2357256, 2390025, 2357263, 2357264, 2357268, 2357278, 2390049, 2357287, 2390060, 2324532, 2390070, 2390072, 2324538, 2324554, 2357323, 2324555, 2390098, 2357332, 2324572, 2357347, 2357349, 2390121, 2357354, 2324588, 2357357, 2390128, 2357361, 2357365, 2357366, 2390136, 2390147, 2357392, 2357396, 2324638, 2357410, 2357413, 2390184, 2357422, 2324658, 2357433, 2390203, 2390212, 2324685, 2390225, 2357457, 2324692, 2357466, 2357474, 2324712, 2324726, 2357495, 2324727, 2357497, 2324736, 2390273, 2324738, 2390280, 2390286, 2390287, 2357520, 2390289, 2324751, 2390297, 2357532, 2357548, 2390317, 2390321, 2357556, 2390329, 2357562, 2324795, 2357574, 2357584, 2357587, 2357590, 2357591, 2324825, 2357601, 2390381, 2390382, 2390411, 2390432, 2390436, 2324902, 2390439, 2357671, 2357674, 2357676, 2357681, 2357682, 2357685, 2357689, 2324926, 2324944, 2357717, 2390498, 2324962, 2357740, 2357745, 2357746, 2324986, 2324998, 2390535, 2357769, 2390538, 2390553, 2325018, 2325024, 2390561, 2357795, 2390571, 2390572, 2357808, 2357817, 2357823, 2325055, 2325059, 2357829, 2325071, 2390617, 2325082, 2357854, 2390623, 2357859, 2357863, 2357868, 2357872, 2390669, 2390689, 2357924, 2357926, 2357928, 2357942, 2357943, 2357944, 2390720, 2390730, 2325194, 2325196, 2357974, 2325213, 2390752, 2357992, 2357995, 2390765, 2325231, 2358003, 2390774, 2325240, 2390782, 2390786, 2390799, 2390800, 2390809, 2358042, 2390813, 2358051, 2358065, 2358066, 2358068, 2358069, 2358077, 2358082, 2358089, 2325347, 2325352, 2358121, 2325359, 2390897, 2358129, 2358147, 2390918, 2390922, 2358156, 2390927, 2358165, 2358167, 2325406, 2358177, 2358181, 2325415, 2390953, 2358185, 2358188, 2358195, 2358198, 2325434, 2358206, 2358218, 2358226, 2391001, 2358240, 2391011, 2358244, 2325475, 2391018, 2325486, 2358261, 2358264, 2358272, 2358274, 2325508, 2325511, 2391050, 2358285, 2325525, 2391063, 2391068, 2325536, 2391079, 2391087, 2391090, 2325555, 2358330, 2391100, 2391101, 2391104, 2391105, 2358342, 2391114, 2391117, 2358354, 2358357, 2325589, 2358359, 2391128, 2358371, 2325618, 2325622, 2391160, 2358401, 2358404, 2391174, 2325647, 2358417, 2391187, 2358422, 2358426, 2358432, 2325676, 2358445, 2391217, 2391226, 2358460, 2358461, 2358465, 2358487, 2391259, 2391260, 2358493, 2325731, 2358503, 2358518, 2358528, 2325767, 2358538, 2358541, 2325778, 2358549, 2358550, 2358558, 2358564, 2358566, 2358569, 2358570, 2358580, 2325814, 2325818, 2358600, 2391369, 2391372, 2391375, 2358616, 2358623, 2358634, 2391418, 2391431, 2325896, 2358670, 2358679, 2358680, 2391456, 2358699, 2358700, 2358707, 2358710, 2391481, 2358716, 2358717, 2325954, 2358726, 2391495, 2391500, 2391501, 2358732, 2358736, 2325975, 2391519, 2358769, 2358773, 2358790, 2358794, 2326048, 2326064, 2358836, 2326076, 2358870, 2358875, 2358883, 2358890, 2326130, 2391667, 2391684, 2391708, 2358940, 2391711, 2391714, 2358946, 2358951, 2358954, 2326186, 2358958, 2358963, 2358971, 2358980, 2358981, 2391764, 2358998, 2359013, 2391782, 2391784, 2359019, 2326254, 2391794, 2359027, 2359028, 2359029, 2391797, 2359031, 2359035, 2391804, 2359055, 2391830, 2359075, 2326312, 2391849, 2326316, 2359095, 2326327, 2359101, 2359106, 2359115, 2391886, 2326354, 2391893, 2391903, 2391907, 2326373, 2359149, 2359150, 2359166, 2326403, 2391947, 2391950, 2326418, 2359194, 2359198, 2391973, 2359217, 2359231, 2326469, 2326470, 2326481, 2392026, 2326499, 2359273, 2359275, 2359276, 2326515, 2392055, 2359288, 2359295]
        data_split = self.VG_attribute_h5['split'][:]
        split_flag = 2 if self.split == 'test' else 0
        split_mask = data_split == split_flag
        
        #Filter images without bounding boxes
        split_mask &= self.VG_attribute_h5['img_to_first_box'][:] >= 0
        if self.cfg.DATASETS.VISUAL_GENOME.FILTER_EMPTY_RELATIONS:
            split_mask &= self.VG_attribute_h5['img_to_first_rel'][:] >= 0
        image_index = np.where(split_mask)[0]
        
        if self.split == 'val':
            image_index = image_index[:self.cfg.DATASETS.VISUAL_GENOME.NUMBER_OF_VALIDATION_IMAGES]
        elif self.split == 'train':
            image_index = image_index[self.cfg.DATASETS.VISUAL_GENOME.NUMBER_OF_VALIDATION_IMAGES:]
        
        split_mask = np.zeros_like(data_split).astype(bool)
        split_mask[image_index] = True
        
        # Get box information
        all_labels = self.VG_attribute_h5['labels'][:, 0]
        all_attributes = self.VG_attribute_h5['attributes'][:, :]
        all_boxes = self.VG_attribute_h5['boxes_{}'.format(self.cfg.DATASETS.VISUAL_GENOME.BOX_SCALE)][:]  # cx,cy,w,h
        assert np.all(all_boxes[:, :2] >= 0)  # sanity check
        assert np.all(all_boxes[:, 2:] > 0)  # no empty box
        
        # Convert from xc, yc, w, h to x1, y1, x2, y2
        all_boxes[:, :2] = all_boxes[:, :2] - all_boxes[:, 2:] / 2
        all_boxes[:, 2:] = all_boxes[:, :2] + all_boxes[:, 2:]
        
        first_box_index = self.VG_attribute_h5['img_to_first_box'][split_mask]
        last_box_index = self.VG_attribute_h5['img_to_last_box'][split_mask]
        first_relation_index = self.VG_attribute_h5['img_to_first_rel'][split_mask]
        last_relation_index = self.VG_attribute_h5['img_to_last_rel'][split_mask]

        #Load relation labels
        all_relations = self.VG_attribute_h5['relationships'][:]
        all_relation_predicates = self.VG_attribute_h5['predicates'][:, 0]
        
        image_indexer = np.arange(len(self.image_data))[split_mask]

        valid_image_ids_set = set(valid_image_ids)
        image_indexer = [i for i in image_indexer if self.image_data[i]['image_id'] in valid_image_ids_set]

        # Iterate over images
        dataset_dicts = []
        num_rels = []
        num_objs = []
        for count, idx_in_image_data in enumerate(image_indexer):
            record = {}
            #Get image metadata
            image_data = self.image_data[image_indexer[idx_in_image_data]]
            record['file_name'] = os.path.join(self.cfg.DATASETS.VISUAL_GENOME.IMAGES, '{}.jpg'.format(image_data['image_id']))
            record['image_id'] = image_data['image_id']
            record['height'] = image_data['height']
            record['width'] = image_data['width']
            if self.clipped:
                if image_data['coco_id'] in self.ids_to_remove:
                    continue
            #Get annotations
            boxes = all_boxes[first_box_index[idx_in_image_data]:last_box_index[idx_in_image_data] + 1, :]
            boxes = all_boxes[first_box_index[count]:last_box_index[count] + 1, :]
            gt_classes = all_labels[first_box_index[idx_in_image_data]:last_box_index[idx_in_image_data] + 1]
            gt_attributes = all_attributes[first_box_index[idx_in_image_data]:last_box_index[idx_in_image_data] + 1, :]

            if first_relation_index[idx_in_image_data] > -1:
                predicates = all_relation_predicates[first_relation_index[idx_in_image_data]:last_relation_index[idx_in_image_data] + 1]
                objects = all_relations[first_relation_index[idx_in_image_data]:last_relation_index[idx_in_image_data] + 1] - first_box_index[idx_in_image_data]
                predicates = predicates - 1
                relations = np.column_stack((objects, predicates))
            else:
                assert not self.cfg.DATASETS.VISUAL_GENOME.FILTER_EMPTY_RELATIONS
                relations = np.zeros((0, 3), dtype=np.int32)
            
            if self.cfg.DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP and self.split == 'train':
                # Remove boxes that don't overlap
                boxes_list = Boxes(boxes)
                ious = pairwise_iou(boxes_list, boxes_list)
                relation_boxes_ious = ious[relations[:,0], relations[:,1]]
                iou_indexes = np.where(relation_boxes_ious > 0.0)[0]
                if iou_indexes.size > 0:
                    relations = relations[iou_indexes]
                else:
                    #Ignore image
                    continue
            #Get masks if possible
            if self.masks is not None:
                try:
                    gt_masks = self.masks[image_data['image_id']]
                except:
                    print (image_data['image_id'])
            record['relations'] = relations
            objects = []
            # if len(boxes) != len(gt_masks):
            mask_idx = 0
            for obj_idx in range(len(boxes)):
                resized_box = boxes[obj_idx] / self.cfg.DATASETS.VISUAL_GENOME.BOX_SCALE * max(record['height'], record['width'])
                obj = {
                      "bbox": resized_box.tolist(),
                      "bbox_mode": BoxMode.XYXY_ABS,
                      "category_id": gt_classes[obj_idx] - 1,
                      "attribute": gt_attributes[obj_idx],           
                }
                if self.masks is not None:
                    if gt_masks['empty_index'][obj_idx]:
                        refined_poly = []
                        for poly_idx, poly in enumerate(gt_masks['polygons'][mask_idx]):
                            if len(poly) >= 6:
                                refined_poly.append(poly)
                        obj["segmentation"] = refined_poly
                        mask_idx += 1
                    else:
                        obj["segmentation"] = []
                    if len(obj["segmentation"]) > 0:
                        objects.append(obj)
                else:
                    objects.append(obj)
            num_objs.append(len(objects))
            num_rels.append(len(relations))  
            
            record['annotations'] = objects
            dataset_dicts.append(record)
        print ("Max Rels:", np.max(num_rels), "Max Objs:", np.max(num_objs))
        print ("Avg Rels:", np.mean(num_rels), "Avg Objs:", np.mean(num_objs))
        print ("Median Rels:", np.median(num_rels), "Median Objs:", np.median(num_objs))
        return dataset_dicts

class ClassBalancedSampler(Dataset):
    """
    Wrap a list to a torch Dataset. It produces elements of the list as data.
    """

    def __init__(self, lst, lst_len, sampled_num, oversampled_ratio, undersample_param, unique_relation_ratios, unique_relations):
        self._lst = lst
        self._len = lst_len
        self.sampled_num = sampled_num
        self.oversampled_ratio = oversampled_ratio
        self.undersample_param = undersample_param
        self.unique_relation_ratios = unique_relation_ratios
        self.unique_relations = unique_relations
        self._num_classes = len(lst.keys())

    def __len__(self):
        return self._len

    def __getitem__(self, idx):
        class_idx = np.random.randint(self._num_classes)
        random_example = np.random.randint(len(self._lst[class_idx]))
        record = self._lst[class_idx][random_example]
        relations = record['relations']
        new_record = copy.deepcopy(record)
        if len(relations) > 0:
            unique_relations = self.unique_relations[class_idx][random_example]
            rc = self.unique_relation_ratios[class_idx][random_example]
            ri = self.sampled_num[class_idx][random_example]
            dropout = np.clip(((ri - rc)/ri) * self.undersample_param, 0.0, 1.0)
            random_arr = np.random.uniform(size=len(relations))
            index_arr = np.array([unique_relations[rel] for rel in relations[:, 2]])
            rel_dropout = dropout[index_arr]
            to_keep = rel_dropout < random_arr
            dropped_relations = relations[to_keep]
            new_record['relations'] = dropped_relations
        return new_record

class BGNNSampler(Dataset):
    """
    Wrap a list to a torch Dataset. It produces elements of the list as data.
    """

    def __init__(self, lst, sampled_num, oversampled_ratio, undersample_param, unique_relation_ratios, unique_relations):
        self._lst = lst
        self.sampled_num = sampled_num
        self.oversampled_ratio = oversampled_ratio
        self.undersample_param = undersample_param
        self.unique_relation_ratios = unique_relation_ratios
        self.unique_relations = unique_relations
        

    def __len__(self):
        return len(self._lst)

    def __getitem__(self, idx):
        record = self._lst[idx]
        relations = record['relations']
        new_record = copy.deepcopy(record)
        if len(relations) > 0:
            unique_relations = self.unique_relations[idx]
            rc = self.unique_relation_ratios[idx]
            ri = self.sampled_num[idx]
            dropout = np.clip(((ri - rc)/ri) * self.undersample_param, 0.0, 1.0)
            random_arr = np.random.uniform(size=len(relations))
            index_arr = np.array([unique_relations[rel] for rel in relations[:, 2]])
            rel_dropout = dropout[index_arr]
            to_keep = rel_dropout < random_arr
            dropped_relations = relations[to_keep]
            new_record['relations'] = dropped_relations

        return new_record
   

def box_filter(boxes, must_overlap=False):
    """ Only include boxes that overlap as possible relations. 
    If no overlapping boxes, use all of them."""
    n_cands = boxes.shape[0]

    overlaps = bbox_overlaps(boxes.astype(np.float), boxes.astype(np.float), to_move=0) > 0
    np.fill_diagonal(overlaps, 0)

    all_possib = np.ones_like(overlaps, dtype=np.bool)
    np.fill_diagonal(all_possib, 0)

    if must_overlap:
        possible_boxes = np.column_stack(np.where(overlaps))

        if possible_boxes.size == 0:
            possible_boxes = np.column_stack(np.where(all_possib))
    else:
        possible_boxes = np.column_stack(np.where(all_possib))
    return possible_boxes

def bbox_overlaps(boxes1, boxes2, to_move=1):
    """
    boxes1 : numpy, [num_obj, 4] (x1,y1,x2,y2)
    boxes2 : numpy, [num_obj, 4] (x1,y1,x2,y2)
    """
    #print('boxes1: ', boxes1.shape)
    #print('boxes2: ', boxes2.shape)
    num_box1 = boxes1.shape[0]
    num_box2 = boxes2.shape[0]
    lt = np.maximum(boxes1.reshape([num_box1, 1, -1])[:,:,:2], boxes2.reshape([1, num_box2, -1])[:,:,:2]) # [N,M,2]
    rb = np.minimum(boxes1.reshape([num_box1, 1, -1])[:,:,2:], boxes2.reshape([1, num_box2, -1])[:,:,2:]) # [N,M,2]

    wh = (rb - lt + to_move).clip(min=0)  # [N,M,2]
    inter = wh[:, :, 0] * wh[:, :, 1]  # [N,M]
    return inter